version: "3.7"
services:
  haproxy:
    image: haproxytech/haproxy-alpine:2.4
    volumes:
      - ./docker/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      app:
        condition: service_healthy
    ports:
      - 5000:80
      - 8404:8404

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    # user: www-data  # TODO
    volumes:
      - ./flask_camp/:/app/flask_camp:ro
      - ./logs/errors.log:/app/logs/errors.log
      - ./app.py:/app/app.py
      - ./docker/:/app/docker:ro
    environment:
      - FLASK_SQLALCHEMY_DATABASE_URI=postgresql://flask_camp_user:flask_camp_user@pg:5432/flask_camp
      - FLASK_SECRET_KEY
      - FLASK_MAIL_DEFAULT_SENDER
      - FLASK_MAIL_SUPPRESS_SEND
      - FLASK_RATELIMIT_ENABLED
      - FLASK_REDIS_HOST
      - FLASK_REDIS_PORT
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/healthcheck"]
      interval: 1s
      retries: 25

    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_healthy
    expose:
      - 5000

  redis:
    # image: redis:latest
    # image: redis/redis-stack-server:latest
    image: redis/redis-stack:latest
    expose:
      - 6379
    ports:
      - 6379:6379
      - 8001:8001  # with redis/redis-stack:latest
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  pg:
    image: postgres
    user: postgres
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - ./docker/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
      # - ./data/pg:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
