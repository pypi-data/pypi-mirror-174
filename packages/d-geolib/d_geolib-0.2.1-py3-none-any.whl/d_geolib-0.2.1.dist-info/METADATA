Metadata-Version: 2.1
Name: d-geolib
Version: 0.2.1
Summary: Python wrappers around the input and output files of the Deltares D-Serie models
Home-page: https://deltares.github.io/GEOLib/
License: MIT
Author: Maarten Pronk
Author-email: maarten.pronk@deltares.nl
Requires-Python: >=3.7,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Provides-Extra: server
Requires-Dist: fastapi (>=0.58,<0.79); extra == "server"
Requires-Dist: jinja2 (>=3.1.2,<4.0.0)
Requires-Dist: pydantic[dotenv] (>=1.6.1,<1.10)
Requires-Dist: requests (>=2.24.0,<3.0.0)
Requires-Dist: uvicorn (>=0.11,<0.19); extra == "server"
Requires-Dist: zipp (>=3.1.0,<4.0.0)
Project-URL: Documentation, https://deltares.github.io/GEOLib/
Project-URL: Repository, https://github.com/Deltares/GEOLib
Description-Content-Type: text/x-rst

GEOLib
=============================

GEOLib is a Python package to generate, execute and parse several D-Serie numerical models.

Installation
------------

Install GEOLib with:

.. code-block:: bash

    $ pip install d-geolib


Requirements
------------

To install the required dependencies to run GEOLib code, run:

.. code-block:: bash

    $ pip install -r requirements

Or, when having poetry installed (you should):

.. code-block:: bash

    $ poetry install


Testing & Development
---------------------

Make sure to have the server dependencies installed: 

.. code-block:: bash

    $ poetry install -E server

In order to run the testcode, from the root of the repository, run:

.. code-block:: bash

    $ pytest

or, in case of using Poetry

.. code-block:: bash

    $ poetry run pytest

Running flake8, mypy is also recommended. For mypy use:

.. code-block:: bash

    $ mypy --config-file pyproject.toml geolib


Documentation
-------------

In order to run the documentation, from the root of the repository, run:

.. code-block:: bash

    $ cd docs
    $ sphinx-build . build -b html -c .


The documentation is now in the `build` subfolder, where you can open 
the `index.html` in your browser.

Build wheel
-----------

To build a distributable wheel package, run:

.. code-block:: bash

    $ poetry build

The distributable packages are now built in the `dist` subfolder.
