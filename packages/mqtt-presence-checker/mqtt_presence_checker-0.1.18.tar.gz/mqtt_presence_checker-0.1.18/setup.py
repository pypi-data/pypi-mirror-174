# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['mqtt_presence_checker']

package_data = \
{'': ['*']}

install_requires = \
['asyncio-mqtt>=0.13.0,<0.14.0',
 'docstring-parser>=0.15,<0.16',
 'dotwiz>=0.4.0,<0.5.0',
 'jsonargparse>=4.15.1,<5.0.0',
 'loguru>=0.6.0,<0.7.0',
 'pingparsing>=1.4.0,<2.0.0',
 'pytest>=7.1.3,<8.0.0',
 'python-daemon>=2.3.1,<3.0.0',
 'toml>=0.10.2,<0.11.0']

extras_require = \
{'docs': ['sphinxcontrib-napoleon>=0.7,<0.8',
          'sphinx>=5.3.0,<6.0.0',
          'sphinx-rtd-theme>=1.0.0,<2.0.0']}

entry_points = \
{'console_scripts': ['mqtt-presence-checker = '
                     'mqtt_presence_checker.__main__:main']}

setup_kwargs = {
    'name': 'mqtt-presence-checker',
    'version': '0.1.18',
    'description': 'Check if you (or your phone) is at home and notify your smarthome via mqtt!',
    'long_description': '# mqtt-presence-checker\n\nCheck if you (or your phone) is at home and notify your smarthome via mqtt.\nYou can configure this daemon via a toml file in _/etc/mqtt-presence-checker/mqtt-presence-checker.conf_.\n\n/etc/mqtt-presence-checker/mqtt-presence-checker.conf:\n\n    [main]\n    cooldown = 10\n    log = "/var/log/mqtt-presence-checker.log"\n\n    [mqtt]\n    host = "mqtt.example.org"\n    username = "<username>"\n    password = "<password>"\n    topic = "presence-checker/presence"\n    \n    [mqtt.sensor.door-sensor]\n    topic = "zigbee2mqtt/door_sensor"\n    predicate = "lambda x: not x[\'contact\']"\n\n    [ping]\n    hosts = [\n        \'alice.example.org\',\n        \'bob.example.org\'\n    ]\n\nThis is rather rudimentary and might crash or behave strange. Feel free\nto [fork me on github](https://github.com/RincewindWizzard/mqtt-presence-checker) and send a PR if you find any bug!\n\n## Install with docker\n\nRun with docker:\n\n    docker run \\\n        --cap-add net_raw \\\n        --cap-add net_admin \\\n        --name mqtt-presence-checker  \\\n        --restart unless-stopped \\\n        -v /etc/mqtt-presence-checker/:/etc/mqtt-presence-checker/ \\\n        --label io.containers.autoupdate=registry \\\n        -d docker.io/rincewindwizzard/mqtt-presence-checker:latest\n\nYou can also configure systemd to create the containers using\n\n    $ podman generate systemd --restart-policy=always --new -n -t 1 mqtt-presence-checker > /etc/systemd/system/container-mqtt-presence-checker.service\n    $ systemctl enable container-mqtt-presence-checker.service\n\nWhich results in the following systemd unit:\n\n    # container-mqtt-presence-checker.service\n    # autogenerated by Podman 3.4.4\n    # Sat Oct 29 17:08:56 UTC 2022\n    \n    [Unit]\n    Description=Podman container-mqtt-presence-checker.service\n    Documentation=man:podman-generate-systemd(1)\n    Wants=network-online.target\n    After=network-online.target\n    RequiresMountsFor=%t/containers\n    \n    [Service]\n    Environment=PODMAN_SYSTEMD_UNIT=%n\n    Restart=always\n    TimeoutStopSec=61\n    ExecStartPre=/bin/rm -f %t/%n.ctr-id\n    ExecStart=/usr/bin/podman run --cidfile=%t/%n.ctr-id --cgroups=no-conmon --rm --sdnotify=conmon --replace --cap-add net_raw --cap-add net_admin --name mqtt-presence-checker -v /etc/mqtt-presence-checker/:/etc/mqtt-presence-checker/ --label io.containers.autoupdate=registry -d docker.io/rincewindwizzard/mqtt-presence-checker:latest\n    ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id\n    ExecStopPost=/usr/bin/podman rm -f --ignore --cidfile=%t/%n.ctr-id\n    Type=notify\n    NotifyAccess=all\n    \n    [Install]\n    WantedBy=default.target\n\nNow everytime\n\n    $ podman auto-update\n\nis called, the latest container image is redeployed.\n',
    'author': 'RincewindWizzard',
    'author_email': 'git@magierdinge.de',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'None',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'extras_require': extras_require,
    'entry_points': entry_points,
    'python_requires': '>=3.10,<4.0',
}


setup(**setup_kwargs)
