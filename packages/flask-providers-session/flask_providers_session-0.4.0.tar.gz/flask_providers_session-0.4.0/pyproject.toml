[tool.poetry]
name = "flask-providers-session"
version = "0.4.0"
description = "Fork version flask session"
authors = ["benbenbang <ben.chen@vestiairecollective.com>"]
readme = "README.md"
packages = [
    {include = "flask_session"}
]

[tool.poetry.dependencies]
python = "^3.7.2"
pylibmc = "^1.6.3"
cachelib = "^0.9.0"
pymongo = "^4.3.2"


[tool.poetry.group.dev.dependencies]
Flask = "^1.1.0"
MarkupSafe = {version = "1.1.1"}
pre-commit = "^2.20.0"
redis = "^4.3.4"
flask-sqlalchemy = "^1"


[tool.poetry.group.build.dependencies]
twine = "^4.0.1"


[tool.poetry.group.tests.dependencies]
pytest = "^7.2.0"
pytest-mock = "^3.10.0"
pytest-cov = "^4.0.0"
pylint = "^2.15.5"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.messages_control]
disable = [
    "all"
]

enable = [
    "consider-using-f-string",
    "cyclic-import",
    "deprecated-module",
    "f-string-without-interpolation",
    "import-error",
    "import-self",
    "undefined-variable",
    "undefined-all-variable",
    "unused-format-string-argument",
    "unused-format-string-key",
    "unused-import",
#   This might be unused but a mandatory signature in airflow runtime
#   "unused-argument",
    "unused-wildcard-import",
    "unused-variable",
    "used-before-assignment",
    "use-list-literal",
    "raise-missing-from",
    "simplifiable-condition",
    "simplify-boolean-expression",
    "super-with-arguments",
    "wrong-spelling-in-comment",
    "wrong-spelling-in-docstring",
]

[tool.pylint.format]
max-line-length = 120

[tool.pytest.ini_options]
addopts = '--basetemp=/tmp/pytest'

testpaths = [
    "tests"
]

markers = [
    "unittests: run unittests",
]
