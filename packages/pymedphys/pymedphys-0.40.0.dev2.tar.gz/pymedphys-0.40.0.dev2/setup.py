# -*- coding: utf-8 -*-
from setuptools import setup

package_dir = \
{'': 'lib'}

packages = \
['pymedphys',
 'pymedphys._base',
 'pymedphys._data',
 'pymedphys._dev',
 'pymedphys._dicom',
 'pymedphys._dicom.anonymise',
 'pymedphys._dicom.connect',
 'pymedphys._dicom.constants',
 'pymedphys._dicom.ct',
 'pymedphys._dicom.delivery',
 'pymedphys._dicom.rtplan',
 'pymedphys._dicom.structure',
 'pymedphys._dicom.utilities',
 'pymedphys._electronfactors',
 'pymedphys._experimental',
 'pymedphys._experimental.autosegmentation',
 'pymedphys._experimental.chartchecks',
 'pymedphys._experimental.fileformats',
 'pymedphys._experimental.fileformats.mapcheck',
 'pymedphys._experimental.fileformats.mephysto',
 'pymedphys._experimental.fileformats.profiler',
 'pymedphys._experimental.film',
 'pymedphys._experimental.paulking',
 'pymedphys._experimental.pedromartinez',
 'pymedphys._experimental.pedromartinez.oncentra',
 'pymedphys._experimental.pedromartinez.utils',
 'pymedphys._experimental.pinnacle',
 'pymedphys._experimental.plancomplexity',
 'pymedphys._experimental.pseudonymisation',
 'pymedphys._experimental.quickcheck',
 'pymedphys._experimental.serviceplans',
 'pymedphys._experimental.streamlit',
 'pymedphys._experimental.streamlit.apps',
 'pymedphys._experimental.streamlit.apps.wlutz',
 'pymedphys._experimental.streamlit.utilities',
 'pymedphys._experimental.streamlit.utilities.dicom',
 'pymedphys._experimental.streamlit.utilities.iview',
 'pymedphys._experimental.vendor.pylinac_vendored',
 'pymedphys._experimental.vendor.pylinac_vendored.core',
 'pymedphys._experimental.wlutz',
 'pymedphys._gamma',
 'pymedphys._gamma.api',
 'pymedphys._gamma.implementation',
 'pymedphys._gamma.utilities',
 'pymedphys._icom',
 'pymedphys._imports',
 'pymedphys._imports.slow',
 'pymedphys._losslessjpeg',
 'pymedphys._metersetmap',
 'pymedphys._metersetmap.delivery',
 'pymedphys._metersetmap.plt',
 'pymedphys._mocks',
 'pymedphys._monaco',
 'pymedphys._mosaiq',
 'pymedphys._streamlit',
 'pymedphys._streamlit.apps',
 'pymedphys._streamlit.apps.metersetmap',
 'pymedphys._streamlit.server',
 'pymedphys._streamlit.utilities',
 'pymedphys._trf',
 'pymedphys._trf.decode',
 'pymedphys._trf.manage',
 'pymedphys._utilities',
 'pymedphys._utilities.algorithms',
 'pymedphys._utilities.constants',
 'pymedphys._utilities.filehash',
 'pymedphys._utilities.transforms',
 'pymedphys._vendor',
 'pymedphys._vendor.apipkg',
 'pymedphys.beta',
 'pymedphys.cli',
 'pymedphys.cli.experimental',
 'pymedphys.docs',
 'pymedphys.docs._build.html._static',
 'pymedphys.experimental',
 'pymedphys.tests',
 'pymedphys.tests.coordinates',
 'pymedphys.tests.delivery',
 'pymedphys.tests.dicom',
 'pymedphys.tests.dicom.rtplan',
 'pymedphys.tests.dicom.structure',
 'pymedphys.tests.e2e',
 'pymedphys.tests.experimental',
 'pymedphys.tests.experimental.film',
 'pymedphys.tests.experimental.mapcheck',
 'pymedphys.tests.experimental.mephysto',
 'pymedphys.tests.experimental.paulking',
 'pymedphys.tests.experimental.paulking.test_coll',
 'pymedphys.tests.experimental.pinnacle',
 'pymedphys.tests.experimental.profiler',
 'pymedphys.tests.experimental.pseudonymisation',
 'pymedphys.tests.experimental.quickcheck',
 'pymedphys.tests.experimental.wlutz',
 'pymedphys.tests.gamma',
 'pymedphys.tests.icom',
 'pymedphys.tests.logfiles',
 'pymedphys.tests.logging',
 'pymedphys.tests.losslessjpeg',
 'pymedphys.tests.metersetmap',
 'pymedphys.tests.mocks',
 'pymedphys.tests.monaco',
 'pymedphys.tests.mosaiq',
 'pymedphys.tests.mosaiq.data',
 'pymedphys.tests.trf',
 'pymedphys.tests.utilities']

package_data = \
{'': ['*'],
 'pymedphys._experimental': ['serviceplans/templates/*',
                             'streamlit/apps/data/*'],
 'pymedphys.docs': ['_build/html/*',
                    '_build/html/_images/*',
                    '_build/html/_modules/*',
                    '_build/html/_modules/pymedphys/_dicom/*',
                    '_build/html/_modules/pymedphys/_electronfactors/*',
                    '_build/html/_modules/pymedphys/_experimental/*',
                    '_build/html/_modules/pymedphys/_experimental/pinnacle/*',
                    '_build/html/_modules/pymedphys/_gamma/implementation/*',
                    '_build/html/_modules/pymedphys/_mosaiq/*',
                    '_build/html/_modules/pymedphys/_trf/decode/*',
                    '_build/html/_modules/pymedphys/_trf/manage/*',
                    '_build/html/_panels_static/*',
                    '_build/html/_sources/*',
                    '_build/html/_sources/contrib/*',
                    '_build/html/_sources/contrib/dive/*',
                    '_build/html/_sources/contrib/info/*',
                    '_build/html/_sources/contrib/setups/*',
                    '_build/html/_sources/contrib/tips/*',
                    '_build/html/_sources/messages/*',
                    '_build/html/_sources/users/background/*',
                    '_build/html/_sources/users/get-started/*',
                    '_build/html/_sources/users/howto/*',
                    '_build/html/_sources/users/howto/gamma/*',
                    '_build/html/_sources/users/howto/tunnels/*',
                    '_build/html/_sources/users/ref/*',
                    '_build/html/_sources/users/ref/cli/*',
                    '_build/html/_sources/users/ref/lib/*',
                    '_build/html/_sources/users/ref/lib/experimental/*',
                    '_build/html/_sphinx_design_static/*',
                    '_build/html/_static/css/*',
                    '_build/html/_static/images/*',
                    '_build/html/_static/js/*',
                    '_build/html/_static/locales/ar/LC_MESSAGES/*',
                    '_build/html/_static/locales/bg/LC_MESSAGES/*',
                    '_build/html/_static/locales/bn/LC_MESSAGES/*',
                    '_build/html/_static/locales/ca/LC_MESSAGES/*',
                    '_build/html/_static/locales/cs/LC_MESSAGES/*',
                    '_build/html/_static/locales/da/LC_MESSAGES/*',
                    '_build/html/_static/locales/de/LC_MESSAGES/*',
                    '_build/html/_static/locales/el/LC_MESSAGES/*',
                    '_build/html/_static/locales/eo/LC_MESSAGES/*',
                    '_build/html/_static/locales/es/LC_MESSAGES/*',
                    '_build/html/_static/locales/et/LC_MESSAGES/*',
                    '_build/html/_static/locales/fi/LC_MESSAGES/*',
                    '_build/html/_static/locales/fr/LC_MESSAGES/*',
                    '_build/html/_static/locales/hr/LC_MESSAGES/*',
                    '_build/html/_static/locales/id/LC_MESSAGES/*',
                    '_build/html/_static/locales/it/LC_MESSAGES/*',
                    '_build/html/_static/locales/iw/LC_MESSAGES/*',
                    '_build/html/_static/locales/ja/LC_MESSAGES/*',
                    '_build/html/_static/locales/ko/LC_MESSAGES/*',
                    '_build/html/_static/locales/lt/LC_MESSAGES/*',
                    '_build/html/_static/locales/lv/LC_MESSAGES/*',
                    '_build/html/_static/locales/ml/LC_MESSAGES/*',
                    '_build/html/_static/locales/mr/LC_MESSAGES/*',
                    '_build/html/_static/locales/ms/LC_MESSAGES/*',
                    '_build/html/_static/locales/nl/LC_MESSAGES/*',
                    '_build/html/_static/locales/no/LC_MESSAGES/*',
                    '_build/html/_static/locales/pl/LC_MESSAGES/*',
                    '_build/html/_static/locales/pt/LC_MESSAGES/*',
                    '_build/html/_static/locales/ro/LC_MESSAGES/*',
                    '_build/html/_static/locales/ru/LC_MESSAGES/*',
                    '_build/html/_static/locales/sk/LC_MESSAGES/*',
                    '_build/html/_static/locales/sl/LC_MESSAGES/*',
                    '_build/html/_static/locales/sr/LC_MESSAGES/*',
                    '_build/html/_static/locales/sv/LC_MESSAGES/*',
                    '_build/html/_static/locales/ta/LC_MESSAGES/*',
                    '_build/html/_static/locales/te/LC_MESSAGES/*',
                    '_build/html/_static/locales/tg/LC_MESSAGES/*',
                    '_build/html/_static/locales/th/LC_MESSAGES/*',
                    '_build/html/_static/locales/tl/LC_MESSAGES/*',
                    '_build/html/_static/locales/tr/LC_MESSAGES/*',
                    '_build/html/_static/locales/uk/LC_MESSAGES/*',
                    '_build/html/_static/locales/ur/LC_MESSAGES/*',
                    '_build/html/_static/locales/vi/LC_MESSAGES/*',
                    '_build/html/_static/locales/zh_CN/LC_MESSAGES/*',
                    '_build/html/_static/locales/zh_TW/LC_MESSAGES/*',
                    '_build/html/_static/scripts/*',
                    '_build/html/_static/styles/*',
                    '_build/html/_static/vendor/fontawesome/5.13.0/*',
                    '_build/html/_static/vendor/fontawesome/5.13.0/css/*',
                    '_build/html/_static/vendor/fontawesome/5.13.0/webfonts/*',
                    '_build/html/contrib/*',
                    '_build/html/contrib/dive/*',
                    '_build/html/contrib/info/*',
                    '_build/html/contrib/setups/*',
                    '_build/html/contrib/tips/*',
                    '_build/html/messages/*',
                    '_build/html/reports/*',
                    '_build/html/users/background/*',
                    '_build/html/users/get-started/*',
                    '_build/html/users/howto/*',
                    '_build/html/users/howto/gamma/*',
                    '_build/html/users/howto/tunnels/*',
                    '_build/html/users/ref/*',
                    '_build/html/users/ref/cli/*',
                    '_build/html/users/ref/lib/*',
                    '_build/html/users/ref/lib/experimental/*',
                    '_static/*',
                    'contrib/dive/*',
                    'contrib/info/*',
                    'contrib/setups/*',
                    'contrib/tips/*',
                    'img/*',
                    'messages/*',
                    'trees/*',
                    'users/background/*',
                    'users/get-started/*',
                    'users/howto/*',
                    'users/howto/gamma/.gitignore',
                    'users/howto/gamma/.gitignore',
                    'users/howto/gamma/.gitignore',
                    'users/howto/gamma/.gitignore',
                    'users/howto/gamma/.gitignore',
                    'users/howto/gamma/.gitignore',
                    'users/howto/gamma/.gitignore',
                    'users/howto/gamma/1D-from-csv.ipynb',
                    'users/howto/gamma/1D-from-csv.ipynb',
                    'users/howto/gamma/1D-from-csv.ipynb',
                    'users/howto/gamma/1D-from-csv.ipynb',
                    'users/howto/gamma/1D-from-csv.ipynb',
                    'users/howto/gamma/1D-from-csv.ipynb',
                    'users/howto/gamma/1D-from-csv.ipynb',
                    'users/howto/gamma/effect-of-noise.ipynb',
                    'users/howto/gamma/effect-of-noise.ipynb',
                    'users/howto/gamma/effect-of-noise.ipynb',
                    'users/howto/gamma/effect-of-noise.ipynb',
                    'users/howto/gamma/effect-of-noise.ipynb',
                    'users/howto/gamma/effect-of-noise.ipynb',
                    'users/howto/gamma/effect-of-noise.ipynb',
                    'users/howto/gamma/from-dicom.ipynb',
                    'users/howto/gamma/from-dicom.ipynb',
                    'users/howto/gamma/from-dicom.ipynb',
                    'users/howto/gamma/from-dicom.ipynb',
                    'users/howto/gamma/from-dicom.ipynb',
                    'users/howto/gamma/from-dicom.ipynb',
                    'users/howto/gamma/from-dicom.ipynb',
                    'users/howto/gamma/gamma_econforge.ipynb',
                    'users/howto/gamma/gamma_econforge.ipynb',
                    'users/howto/gamma/gamma_econforge.ipynb',
                    'users/howto/gamma/gamma_econforge.ipynb',
                    'users/howto/gamma/gamma_econforge.ipynb',
                    'users/howto/gamma/gamma_econforge.ipynb',
                    'users/howto/gamma/gamma_econforge.ipynb',
                    'users/howto/gamma/index.rst',
                    'users/howto/gamma/index.rst',
                    'users/howto/gamma/index.rst',
                    'users/howto/gamma/index.rst',
                    'users/howto/gamma/index.rst',
                    'users/howto/gamma/index.rst',
                    'users/howto/gamma/index.rst',
                    'users/howto/gamma/speed-up.ipynb',
                    'users/howto/gamma/speed-up.ipynb',
                    'users/howto/gamma/speed-up.ipynb',
                    'users/howto/gamma/speed-up.ipynb',
                    'users/howto/gamma/speed-up.ipynb',
                    'users/howto/gamma/speed-up.ipynb',
                    'users/howto/gamma/speed-up.ipynb',
                    'users/howto/tunnels/*',
                    'users/howto/tunnels/img/*',
                    'users/ref/*',
                    'users/ref/cli/*',
                    'users/ref/lib/*',
                    'users/ref/lib/experimental/*'],
 'pymedphys.tests': ['dicom/data/rtplan/*',
                     'dicom/scratch/*',
                     'e2e/cypress/*',
                     'e2e/cypress/fixtures/*',
                     'e2e/cypress/integration/streamlit/*',
                     'e2e/cypress/plugins/*',
                     'e2e/cypress/support/*',
                     'experimental/mephysto/data/baselines/*',
                     'experimental/mephysto/data/measurements/*']}

install_requires = \
['typing-extensions']

extras_require = \
{'all': ['tqdm',
         'attrs',
         'watchdog',
         'keyring',
         'packaging',
         'PyYAML',
         'requests',
         'python-dateutil',
         'matplotlib',
         'scipy',
         'xarray',
         'pymssql',
         'sqlalchemy',
         'natsort',
         'tomlkit',
         'toml',
         'pynetdicom',
         'dbfread',
         'xmltodict',
         'timeago',
         'xlsxwriter',
         'plotly',
         'fsspec',
         'dicompyler-core',
         'scikit-learn',
         'imageio',
         'streamlit<1.12.0',
         'streamlit-ace',
         'numpy>=1.20.2',
         'interpolation>=2.1.0,<3.0.0',
         'pandas>=1.0.0',
         'pydicom>=2.0.0',
         'shapely>=1.7.0',
         'scikit-image>=0.18.1',
         'pylibjpeg-libjpeg>=1.3.2',
         'pylinac==2.3.2',
         'reportlab>=3.6',
         'ipython>=7.31.1',
         'Pillow>=9.0.0',
         'sphinx-argparse',
         'sphinx-book-theme',
         'jupyter-book>=0.12.0',
         'networkx',
         'pytest',
         'pytest-sugar',
         'hypothesis<6',
         'astroid',
         'psutil',
         'pylint',
         'pytest-rerunfailures',
         'pre-commit',
         'black>=22.3.0,<23.0.0',
         'mypy',
         'rope',
         'doc8',
         'readme-renderer',
         'tabulate',
         'pyoxidizer'],
 'all:sys_platform == "win32"': ['pywin32>=301'],
 'build': ['pyoxidizer'],
 'cli': ['toml'],
 'comparables': ['flashgamma'],
 'dev': ['pre-commit',
         'black>=22.3.0,<23.0.0',
         'mypy',
         'rope',
         'doc8',
         'readme-renderer',
         'tabulate',
         'pyoxidizer'],
 'dicom': ['pynetdicom', 'pydicom>=2.0.0'],
 'docs': ['tqdm',
          'matplotlib',
          'scipy',
          'toml',
          'numpy>=1.20.2',
          'pydicom>=2.0.0',
          'ipython>=7.31.1',
          'sphinx-argparse',
          'sphinx-book-theme',
          'jupyter-book>=0.12.0',
          'networkx'],
 'doctests': ['pylinac==2.3.2',
              'sphinx-book-theme',
              'black>=22.3.0,<23.0.0',
              'tabulate'],
 'icom': ['numpy>=1.20.2'],
 'mosaiq': ['pymssql', 'sqlalchemy', 'toml', 'scikit-learn', 'pandas>=1.0.0'],
 'propagate': ['tomlkit', 'black>=22.3.0,<23.0.0'],
 'tests': ['tqdm',
           'python-dateutil',
           'pytest',
           'pytest-sugar',
           'hypothesis<6',
           'astroid',
           'psutil',
           'pylint',
           'pytest-rerunfailures'],
 'user': ['tqdm',
          'attrs',
          'watchdog',
          'keyring',
          'packaging',
          'PyYAML',
          'requests',
          'python-dateutil',
          'matplotlib',
          'scipy',
          'xarray',
          'pymssql',
          'sqlalchemy',
          'natsort',
          'tomlkit',
          'toml',
          'pynetdicom',
          'dbfread',
          'xmltodict',
          'timeago',
          'xlsxwriter',
          'plotly',
          'fsspec',
          'dicompyler-core',
          'scikit-learn',
          'imageio',
          'streamlit<1.12.0',
          'streamlit-ace',
          'numpy>=1.20.2',
          'interpolation>=2.1.0,<3.0.0',
          'pandas>=1.0.0',
          'pydicom>=2.0.0',
          'shapely>=1.7.0',
          'scikit-image>=0.18.1',
          'pylibjpeg-libjpeg>=1.3.2',
          'pylinac==2.3.2',
          'reportlab>=3.6',
          'Pillow>=9.0.0'],
 'user:sys_platform == "win32"': ['pywin32>=301']}

entry_points = \
{'console_scripts': ['pymedphys = pymedphys.__main__:main']}

setup_kwargs = {
    'name': 'pymedphys',
    'version': '0.40.0.dev2',
    'description': 'Medical Physics library',
    'long_description': "|logo|\n\n.. |logo| image:: https://github.com/pymedphys/pymedphys/raw/ca501275227f190a77e641a75af925d9070952b6/lib/pymedphys/docs/_static/pymedphys_title.svg\n    :target: https://docs.pymedphys.com/\n\n.. START_OF_DOCS_IMPORT\n\n**A community effort to develop an open standard library for Medical Physics\nin Python. We build high quality, transparent software together via peer review\nand open source distribution. Open code is better science.**\n\n|build| |pypi| |python| |license|\n\n.. |build| image:: https://img.shields.io/github/workflow/status/pymedphys/pymedphys/Library\n    :target: https://github.com/pymedphys/pymedphys/actions?query=branch%3Amain\n\n.. |pypi| image:: https://img.shields.io/pypi/v/pymedphys\n    :target: https://pypi.org/project/pymedphys/\n\n.. |python| image:: https://img.shields.io/pypi/pyversions/pymedphys\n    :target: https://pypi.org/project/pymedphys/\n\n.. |license| image:: https://img.shields.io/pypi/l/pymedphys\n    :target: https://choosealicense.com/licenses/apache-2.0/\n\n\nWhat is PyMedPhys?\n==================\n\nPyMedPhys is an open-source Medical Physics python library built by an open\ncommunity that values and prioritises code sharing, review, improvement, and\nlearning from each other. It is inspired by the collaborative work of our\nphysics peers in astronomy and the `Astropy Project`_. PyMedPhys is available\non `PyPI`_ and `GitHub`_.\n\nPyMedPhys first paper in the Journal of Open Source Software contains more\nbackground information, including a statement of need. You can access the paper\n`here <https://joss.theoj.org/papers/10.21105/joss.04555>`_. When referencing\nPyMedPhys, please cite this paper as follows:\n\n*Biggs, S., Jennings, M., Swerdloff, S., Chlap, P., Lane, D., Rembish, J.,\nMcAloney, J., King, P., Ayala, R., Guan, F. and Lambri, N.., (2022).\nPyMedPhys: A community effort to develop an open, Python-based standard\nlibrary for medical physics applications. Journal of Open Source Software,\n7(78), 4555, https://doi.org/10.21105/joss.04555*\n\n.. _`Astropy Project`: http://www.astropy.org/\n.. _`PyPI`: https://pypi.org/project/pymedphys/\n.. _`GitHub`: https://github.com/pymedphys/pymedphys\n\nBeta level of development\n*************************\n\nPyMedPhys is currently within the ``beta`` stage of its life-cycle. It will\nstay in this stage until the version number leaves ``0.x.x`` and enters\n``1.x.x``. While PyMedPhys is in ``beta`` stage, **no API is guaranteed to be\nstable from one release to the next.** In fact, it is very likely that the\nentire API will change multiple times before a ``1.0.0`` release. In practice,\nthis means that upgrading ``pymedphys`` to a new version will possibly break\nany code that was using the old version of pymedphys. We try to be abreast of\nthis by providing details of any breaking changes from one release to the next\nwithin the `Release Notes`_.\n\nCommunity\n**************\n\nPyMedPhys has a `Discourse community <https://pymedphys.discourse.group/>`_\nto both help you find your feet using PyMedPhys and to facilitate collaboration\nand general discussion. Please reach out over there and we'd love to get to\nknow you!\n\nDocumentation\n=============\n\nPyMedPhys can be installed with:\n\n.. code:: bash\n\n    pip install pymedphys[user]\n\nFurther user installation instructions can be found in the `Quick Start Guide`_.\n\nThe PyMedPhys documentation contains two overarching guides:\n\n1. **The Users Guide**: where you can find instructions to `get started`_ with\n   the library and the CLI, in-depth `how-to guides`_ (examples for users) on PyMedPhys' various\n   tools, some `background information`_ on individual PyMedPhys projects as\n   well as the `Technical Reference`_.\n\n2. **The Contributors Guide**: for those who wish to make new contributions\n   to the PyMedPhys library, CLI or app. Here you'll find detailed `workstation\n   setup guides`_ to enable contributions, important `repository information`_,\n   and some `tips & tricks`_ to overcome common issues.\n\nDevelopment\n=============\n\nThe PyMedPhys project is managed using `Poetry`_.\n\nAfter cloning the repository, install the PyMedPhys dependencies and set up pre-commit by running:\n\n.. code:: bash\n\n    poetry install -E all\n    poetry run pre-commit install\n\nRun automated tests with:\n\n.. code:: bash\n\n    poetry run pymedphys dev tests\n\n\nOur Team\n========\n\nPyMedPhys is what it is today due to its maintainers and contributors, both\npast and present. Here is our team.\n\nMaintainers\n***********\n\n* `Simon Biggs`_\n    * `Radiotherapy AI`_, Australia\n\n.. _`Simon Biggs`: https://github.com/SimonBiggs\n\n* `Stuart Swerdloff`_\n    * `ELEKTA Pty Ltd`_: New Zealand\n\n.. _`Stuart Swerdloff`: https://github.com/sjswerdloff\n\n* `Matthew Jennings`_\n    * `Royal Adelaide Hospital`_, Australia\n\n.. _`Matthew Jennings`: https://github.com/Matthew-Jennings\n\n* `Phillip Chlap`_\n    * `University of New South Wales`_, Australia\n    * `Ingham Institute`_, Australia\n\n.. _`Phillip Chlap`: https://github.com/pchlap\n\n\n|rai| |sjs| |rah|\n\nActive contributors\n****************************\n\n* `Derek Lane`_\n    * `ELEKTA AB`_, Houston TX\n\n.. _`Derek Lane`: https://github.com/dg1an3\n\n* `Jake Rembish`_\n    * `UT Health San Antonio`_, USA\n\n.. _`Jake Rembish`: https://github.com/rembishj\n\n* `Nicola Lambri`_\n    * `IRCCS Humanitas Research Hospital`_, Italy\n    * `Humanitas University`_, Italy\n\n.. _`Nicola Lambri`: https://github.com/nlambriICH\n\n* `Cody Crewson`_\n    * `Saskatchewan Cancer Agency`_, Canada\n\n.. _`Cody Crewson`: https://github.com/crcrewso\n\n* `Fada Guan`_\n    * `Yale University School of Medicine`_, USA\n\n.. _`Fada Guan`: https://github.com/guanfada\n\n|uth|\n\nPast contributors\n****************************\n\n* `Matthew Cooper <https://github.com/matthewdeancooper>`_\n* `Pedro Martinez <https://github.com/peterg1t>`_\n* `Rafael Ayala <https://github.com/ayalalazaro>`_\n* `Matthew Sobolewski <https://github.com/msobolewski>`_\n* `Paul King <https://github.com/kingrpaul>`_\n* `Jacob McAloney <https://github.com/JacobMcAloney>`_\n\n.. |rai| image:: https://github.com/pymedphys/pymedphys/raw/286deacdea2b3af9322796d413d0da6e1d8935a9/logos/rai.png\n    :target: `Radiotherapy AI`_\n\n.. |rah| image:: https://github.com/pymedphys/pymedphys/raw/3f8d82fc3b53eb636a75336477734e39fa406110/docs/logos/gosa_200x200.png\n    :target: `Royal Adelaide Hospital`_\n\n.. |uth| image:: https://github.com/pymedphys/pymedphys/raw/3f8d82fc3b53eb636a75336477734e39fa406110/docs/logos/UTHSA_logo.png\n    :target: `UT Health San Antonio`_\n\n.. |sjs| image:: https://github.com/pymedphys/pymedphys/raw/7e9204656e0468b0843533472553a03a99387386/logos/swerdloff.png\n    :target: `Swerdloff Family`_\n\n.. _`Radiotherapy AI`: https://radiotherapy.ai/\n\n.. _`ELEKTA Pty Ltd`: https://www.elekta.com/\n\n.. _`ELEKTA AB`: https://www.elekta.com/\n\n.. _`Royal Adelaide Hospital`: https://www.rah.sa.gov.au/\n\n.. _`University of New South Wales`: https://www.unsw.edu.au/\n\n.. _`South Western Sydney Local Health District`: https://www.swslhd.health.nsw.gov.au/\n\n.. _`Anderson Regional Cancer Center`: https://www.andersonregional.org/services/cancer-care/\n\n.. _`Northern Beaches Cancer Care`: https://www.northernbeachescancercare.com.au/\n\n.. _`University of Calgary`: https://www.ucalgary.ca/\n\n.. _`Tom Baker Cancer Centre`: https://www.ahs.ca/tbcc\n\n.. _`UT Health San Antonio`: https://www.uthscsa.edu/academics/biomedical-sciences/programs/radiological-sciences-phd\n\n.. _`Hospital General Universitario Gregorio Marañón`: https://www.comunidad.madrid/hospital/gregoriomaranon/\n\n.. _`Swerdloff Family`: https://github.com/sjswerdloff\n\n.. _`Ingham Institute`: https://inghaminstitute.org.au/\n\n.. _`IRCCS Humanitas Research Hospital`: https://www.humanitas.net/\n\n.. _`Saskatchewan Cancer Agency`: http://www.saskcancer.ca/\n\n.. _`Humanitas University`: https://www.hunimed.eu/\n\n.. _`Yale University School of Medicine`: https://medicine.yale.edu/\n\n.. END_OF_DOCS_IMPORT\n\n.. _`Release Notes`: ./CHANGELOG.md\n\n.. _`Statement of Need`: https://docs.pymedphys.com/en/latest/statement-of-need.html\n.. _`Quick Start Guide`: https://docs.pymedphys.com/en/latest/users/get-started/quick-start.html\n.. _`get started`: https://docs.pymedphys.com/en/latest/users/get-started/index.html\n.. _`how-to guides`: https://docs.pymedphys.com/en/latest/users/howto/index.html\n.. _`background information`: https://docs.pymedphys.com/en/latest/users/background/index.html\n.. _`Technical Reference`: https://docs.pymedphys.com/en/latest/users/ref/index.html\n.. _`workstation setup guides`: https://docs.pymedphys.com/en/latest/contrib/setups/index.html\n.. _`repository information`: https://docs.pymedphys.com/en/latest/contrib/info/index.html\n.. _`tips & tricks`: https://docs.pymedphys.com/en/latest/contrib/tips/index.html\n.. _`Poetry`: https://python-poetry.org/\n",
    'author': 'PyMedPhys Contributors',
    'author_email': 'developers@pymedphys.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://pymedphys.com',
    'package_dir': package_dir,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'extras_require': extras_require,
    'entry_points': entry_points,
    'python_requires': '>=3.8,<3.11',
}


setup(**setup_kwargs)
