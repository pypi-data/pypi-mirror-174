Metadata-Version: 2.1
Name: blitzml
Version: 0.4.0
Summary: A low-code library for machine learning pipelines
Author: AI Team
Author-email: AI Team <CV.Team.CSE.2023@gmail.com>
Project-URL: Homepage, https://github.com/AhmedMohamed25/blitzml
Keywords: ml,machine learning,classification
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: joblib (>=1.2.0)
Requires-Dist: numpy (>=1.23.4)
Requires-Dist: pandas (>=1.5.1)
Requires-Dist: scikit-learn (>=1.1.3)
Provides-Extra: dev
Requires-Dist: pip-tools ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'


# blitzml

Automate machine learning piplines rapidly


## How to install


```bash
pip install blitzml
```


## Usage

```python
from blitzml.tabular import Classification
import pandas as pd

# prepare your dataframes
train_df = pd.read_csv("auxiliary/data/train.csv")
test_df = pd.read_csv("auxiliary/data/test.csv")
ground_truth_df = pd.read_csv("auxiliary/ground_truth.csv")

# create the pipeline with a certain classifier
auto = Classification(train_df, test_df, ground_truth_df, classifier = 'RF', n_estimators = 50)

# first perform data preprocessing
auto.preprocess()
# second train the model
auto.train_the_model()


# After training the model we can generate the following:
auto.gen_pred_df()
auto.gen_metrics_dict()

# Then you can get their values using:
pred_df = auto.pred_df
metrics_dict = auto.metrics_dict

print(pred_df.head())
print(metrics_dict)
```


## Available Classifiers

- Random Forest 'RF' 
- LinearDiscriminantAnalysis 'LDA'
- Support Vector Classifier 'SVC'
`When using RF you can also provide the number of estimators`

`via n_estimators = 100 (default)`



