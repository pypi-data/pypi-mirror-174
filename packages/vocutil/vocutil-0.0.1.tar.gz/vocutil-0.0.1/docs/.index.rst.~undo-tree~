(undo-tree-save-format-version . 1)
"730af2aed38a45ad4fa6ad0fd6aaa6c6779bd8b2"
[nil nil nil nil (25442 65495 929367 408000) 0 nil]
([nil nil ((nil rear-nonsticky nil 350 . 351) (nil fontified nil 350 . 351) (nil fontified nil 349 . 350) (nil fontified nil 272 . 349) (nil fontified nil 271 . 272) (nil fontified nil 269 . 271) (nil fontified nil 268 . 269) (nil fontified nil 266 . 268) (nil fontified nil 265 . 266) (nil fontified nil 264 . 265) (nil fontified nil 249 . 264) (nil fontified nil 224 . 249) (nil fontified nil 223 . 224) (nil fontified nil 221 . 223) (nil fontified nil 220 . 221) (nil fontified nil 218 . 220) (nil fontified nil 217 . 218) (nil fontified nil 209 . 217) (nil fontified nil 208 . 209) (nil fontified nil 207 . 208) (nil fontified nil 198 . 207) (nil fontified nil 197 . 198) (nil fontified nil 196 . 197) (nil fontified nil 194 . 196) (nil fontified nil 193 . 194) (nil fontified nil 191 . 193) (nil fontified nil 190 . 191) (nil fontified nil 188 . 190) (nil fontified nil 167 . 188) (nil fontified nil 137 . 167) (nil fontified nil 136 . 137) (nil fontified nil 134 . 136) (nil fontified nil 133 . 134) (nil fontified nil 131 . 133) (nil fontified nil 130 . 131) (nil fontified nil 129 . 130) (nil fontified nil 97 . 129) (nil fontified nil 96 . 97) (nil fontified nil 95 . 96) (nil fontified nil 88 . 95) (nil fontified nil 87 . 88) (nil fontified nil 85 . 87) (nil fontified nil 84 . 85) (nil fontified nil 82 . 84) (nil fontified nil 81 . 82) (nil fontified nil 4 . 81) (nil fontified nil 3 . 4) (nil fontified nil 1 . 3) (1 . 351) (t 25250 40577 55573 794000)) nil (25442 65495 929355 231000) 0 nil])
([nil nil ((#(".. *****************************************************************************
..
.. pdflatex2, a Python/PDFLaTeX interface.
..
.. Copyright 2022 Jeremy A Gray <gray@flyquackswim.com>.  All rights
.. reserved.
.. Copyright 2019 Marcelo Bello.
..
.. SPDX-License-Identifier: MIT
..
.. *****************************************************************************

" 0 3 (fontified t face rst-comment) 3 80 (fontified t font-lock-multiline t face (rst-comment)) 80 81 (fontified t font-lock-multiline t face (rst-comment)) 81 83 (fontified t face rst-comment) 83 84 (fontified t) 84 87 (fontified t face rst-comment) 87 126 (fontified t font-lock-multiline t face (rst-comment)) 126 127 (fontified t font-lock-multiline t face (rst-comment)) 127 129 (fontified t face rst-comment) 129 130 (fontified t) 130 133 (fontified t face rst-comment) 133 163 (fontified t font-lock-multiline t face (rst-comment)) 163 184 (fontified t face (rst-definition rst-comment) font-lock-multiline t) 184 198 (fontified t font-lock-multiline t face (rst-comment)) 198 199 (fontified t font-lock-multiline t face (rst-comment)) 199 202 (fontified t face rst-comment) 202 211 (fontified t font-lock-multiline t face (rst-comment)) 211 212 (fontified t font-lock-multiline t face (rst-comment)) 212 215 (fontified t face rst-comment) 215 244 (fontified t font-lock-multiline t face (rst-comment)) 244 245 (fontified t font-lock-multiline t face (rst-comment)) 245 247 (fontified t face rst-comment) 247 248 (fontified t) 248 251 (fontified t face rst-comment) 251 279 (fontified t font-lock-multiline t face (rst-comment)) 279 280 (fontified t font-lock-multiline t face (rst-comment)) 280 282 (fontified t face rst-comment) 282 283 (fontified t) 283 286 (fontified t face rst-comment) 286 363 (fontified t font-lock-multiline t face (rst-comment)) 363 364 (fontified t font-lock-multiline t face (rst-comment)) 364 365 (fontified t)) . 351) (undo-tree-id31 . -365) (undo-tree-id32 . 281) (undo-tree-id33 . 235) (undo-tree-id34 . 153) (undo-tree-id35 . 120) (undo-tree-id36 . 117) (undo-tree-id37 . 82) (undo-tree-id38 . 284) (undo-tree-id39 . 281) (undo-tree-id40 . 281) (undo-tree-id41 . 235) (undo-tree-id42 . 153) (undo-tree-id43 . 120) (undo-tree-id44 . 117) (undo-tree-id45 . 82) (undo-tree-id46 . -81) (undo-tree-id47 . -365) (undo-tree-id48 . -365) (undo-tree-id49 . -365) 716) nil (25442 65495 929317 663000) 0 nil])
([nil nil ((#("pdflatex2" 0 9 (fontified t font-lock-multiline t face (rst-level-1))) . 375) (undo-tree-id28 . 9) (undo-tree-id29 . 9) (undo-tree-id30 . -9)) nil (25442 65495 929277 688000) 0 nil])
([nil nil ((375 . 382)) nil (25442 65495 929269 315000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t font-lock-multiline t face (rst-adornment))) . 351) (undo-tree-id0 . 1) (undo-tree-id1 . 1) (undo-tree-id2 . 1) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (undo-tree-id7 . 1) (undo-tree-id8 . 1) (undo-tree-id9 . 1) (undo-tree-id10 . 1) (undo-tree-id11 . 1) (undo-tree-id12 . 1) (undo-tree-id13 . 1) (#("#" 0 1 (fontified t font-lock-multiline t face (rst-adornment))) . 351) (undo-tree-id14 . 1) (undo-tree-id15 . 1) (undo-tree-id16 . 1) (undo-tree-id17 . 1) (undo-tree-id18 . 1) (undo-tree-id19 . 1) (undo-tree-id20 . 1) (undo-tree-id21 . 1) (undo-tree-id22 . 1) (undo-tree-id23 . 1) (undo-tree-id24 . 1) (undo-tree-id25 . 1) (undo-tree-id26 . 1) (undo-tree-id27 . 1)) nil (25442 65495 929260 253000) 0 nil])
([nil current ((#("#" 0 1 (fontified t font-lock-multiline t face (rst-adornment))) . 395) (#("#" 0 1 (fontified t font-lock-multiline t face (rst-adornment))) . 395)) nil (25442 65495 929188 574000) 0 nil])
nil
