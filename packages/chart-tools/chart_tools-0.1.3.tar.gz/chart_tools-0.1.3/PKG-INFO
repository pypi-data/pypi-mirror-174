Metadata-Version: 2.1
Name: chart-tools
Version: 0.1.3
Summary: Powerful visualizations, and an easy to use, interactive api for exploring and loading datasets
Project-URL: Documentation, https://github.com/ryayoung/chart-tools
Author-email: Ryan Young <dev@ryayoung.com>
Maintainer-email: Ryan Young <dev@ryayoung.com>
License: Copyright 2022 Ryan Young
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
License-File: LICENSE
Keywords: chart,graph,visualization
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.9
Requires-Dist: matplotlib
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: requests
Requires-Dist: seaborn
Description-Content-Type: text/markdown

<h1> chart-tools &nbsp;&nbsp;&nbsp; <a href="https://pypi.org/project/chart-tools/" alt="Version"> <img src="https://img.shields.io/pypi/v/chart-tools.svg" /></a> </h1>

<!-- **View Full Documentation [Here](https://github.com/ryayoung/chart-tools)** -->

<br>

## Install & Use

Must have python 3.9+

```
pip install chart-tools
```

```py
import chart_tools as ct
ct.load_data() # outputs available pre-defined data sources
```

<br>

# [Data Interface](https://github.com/ryayoung/chart-tools/blob/main/sampledata.md)

#### Easily load datasets and explore available sources with one line of code

- The [`load_data()`](https://github.com/ryayoung/chart-tools/blob/main/sampledata.md) function and [`DataSource`](https://github.com/ryayoung/chart-tools/blob/main/sampledata.md) object use Github's API to explore file structures in repositories containing `.csv` files, and easily load files into dataframes. Chart-tools has a pre-defined library (collection of repositories) for you to explore within your notebook and load data from.

#### Robust caching system designed for Python notebooks, performing great with large datasets.

- Any dataframe you load gets cached in memory, remembering which pandas keyword arguments you used when loading the file. Next time you load it, you'll get a _copy_ of the cached dataframe, unless you pass different keyword arguments. Not only is this great for performance with large datasets, but it also eliminates the common need to declare a `df_raw = ...` and then use `df = df_raw.copy()` to get your original data again. 

#### Has a pre-defined library of data sources to explore, and lets you easily define your own library

- Save an entire Github repository file structure (csv files only) to your desktop

# 

# [Charts & Visualization](https://github.com/ryayoung/chart-tools/blob/main/superheat.md)

### [`superheat`](https://github.com/ryayoung/chart-tools/blob/main/superheat.md)

- A "super" correlation heatmap you can't find elsewhere, designed for speed and ease of use.
- Marks are sized dynamically based on correlation strength, drawing your eyes straight to the most important relationships.
- Easily filter out variables whose coefficients average below a threshold, or simply mask/hide marks below a threshold.

#### Examples

<img width="450" alt="Screen Shot 2022-04-24 at 3 02 22 AM" src="https://user-images.githubusercontent.com/90723578/164968825-2679e57e-4df1-44fd-9465-6cca60c211ce.png">

<img width="1000" alt="Screen Shot 2022-04-24 at 3 09 06 AM" src="https://user-images.githubusercontent.com/90723578/164969119-f7950d5a-f40c-4a6e-b6d6-cc1067dec474.png">
