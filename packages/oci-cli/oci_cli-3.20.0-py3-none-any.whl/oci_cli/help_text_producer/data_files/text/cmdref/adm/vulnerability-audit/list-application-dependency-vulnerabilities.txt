"list-application-dependency-vulnerabilities"
*********************************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Examples


Description
===========

Returns a list of Application Dependencies with their associated
vulnerabilities.


Usage
=====

   oci adm vulnerability-audit list-application-dependency-vulnerabilities [OPTIONS]


Required Parameters
===================

--vulnerability-audit-id [text]

Unique Vulnerability Audit identifier path parameter.


Optional Parameters
===================

--all

Fetches all pages of results. If you provide this option, then you
cannot provide the "--limit" option.

--cvss-v2-greater-than-or-equal [float]

A filter that returns only Vulnerability Audits that have a Common
Vulnerability Scoring System Version 2 (CVSS V2) greater or equal than
the specified value.

--cvss-v3-greater-than-or-equal [float]

A filter that returns only Vulnerability Audits that have a Common
Vulnerability Scoring System Version 3 (CVSS V3) greater or equal than
the specified value.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--gav [text]

A filter to return only resources that match the entire GAV (Group
Artifact Version) identifier given.

--limit [integer]

The maximum number of items to return.

--page [text]

A token representing the position at which to start retrieving
results. This must come from the *opc-next-page* header field of a
previous response.

--page-size [integer]

When fetching results, the number of results to fetch per call. Only
valid when used with "--all" or "--limit", and ignored otherwise.

--sort-by [text]

The field to sort by. Only one sort order may be provided. Default
order for gav is ascending where ascending corresponds to
alphanumerical order. Default order for nodeId is ascending where
ascending corresponds to alphanumerical order.

Accepted values are:

   gav, nodeId

--sort-order [text]

The sort order to use, either ‘ASC’ or ‘DESC’.

Accepted values are:

   ASC, DESC

--vulnerability-id [text]

A filter to return only Vulnerability Audits that match the specified
id.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--query", "--raw-output", "--read-timeout",
"--region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-i", "-v"


Examples
========

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci adm vulnerability-audit create --generate-param-json-input application-dependencies > application-dependencies.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/adm/knowledge-base/create.html#cmdoption-compartment-id
       export build_type=<substitute-value-of-build_type> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/adm/vulnerability-audit/create.html#cmdoption-build-type

       knowledge_base_id=$(oci adm knowledge-base create --compartment-id $compartment_id --query data.id --raw-output)

       vulnerability_audit_id=$(oci adm vulnerability-audit create --application-dependencies file://application-dependencies.json --build-type $build_type --compartment-id $compartment_id --knowledge-base-id $knowledge_base_id --query data.id --raw-output)

       oci adm vulnerability-audit list-application-dependency-vulnerabilities --vulnerability-audit-id $vulnerability_audit_id
