Metadata-Version: 2.1
Name: jarvis-ui
Version: 0.4.1
Summary: Jarvis UI to perform voice commands via API calls.
Home-page: https://github.com/thevickypedia/Jarvis_UI
Author: Vignesh Sivanandha Rao
Author-email: svignesh1793@gmail.com
License: UNKNOWN
Download-URL: https://github.com/thevickypedia/Jarvis_UI/archive/main.zip
Project-URL: Source, https://github.com/thevickypedia/Jarvis_UI
Project-URL: Docs, https://thevickypedia.github.io/Jarvis_UI
Project-URL: Bug Tracker, https://github.com/thevickypedia/Jarvis_UI/issues
Keywords: python,natural-language-processing,text-to-speech,speech-recognition,jarvis,hotword-detection,virtual-assistant,multiprocessing,threadpool
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Information Technology
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Multimedia :: Sound/Audio :: Speech
Classifier: Topic :: Scientific/Engineering :: Human Machine Interfaces
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Multimedia :: Sound/Audio :: Conversion
Classifier: Natural Language :: English
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: packaging (==21.3)
Requires-Dist: SpeechRecognition (==3.8.1)
Requires-Dist: pydantic (==1.9.0)
Requires-Dist: pyttsx3 (==2.90)
Requires-Dist: requests (>=2.28.0)
Requires-Dist: pydantic[dotenv]
Requires-Dist: pydantic[email]

![Python](https://img.shields.io/badge/python-3.8%20%7C%203.9%20%7C%203.10%20%7C%203.11-blue)

**Deployments**

[![pages-build-deployment](https://github.com/thevickypedia/Jarvis_UI/actions/workflows/pages/pages-build-deployment/badge.svg)](https://github.com/thevickypedia/Jarvis_UI/actions/workflows/pages/pages-build-deployment)
[![pypi](https://github.com/thevickypedia/Jarvis_UI/actions/workflows/python-publish.yml/badge.svg)](https://github.com/thevickypedia/Jarvis_UI/actions/workflows/python-publish.yml)

# Jarvis UI

Connects to [`Jarvis`](https://github.com/thevickypedia/Jarvis/blob/master/api/fast.py) running in the backend to process request and response via API calls.

### Mandatory Env Vars
- `REQUEST_URL`: URL to which the API call has to be made. Can be `localhost` or a `tunneled` URL.
- `TOKEN`: Authentication token.

### Optional Env Vars
Click [here](https://github.com/thevickypedia/Jarvis#env-variables), for more information.
- `REQUEST_TIMEOUT`: Defaults to `5` - _Timeout for API calls_
- `SPEECH_TIMEOUT`: Defaults to `0` for macOS, `5` for Windows - _Timeout for speech synthesis_
- `SENSITIVITY`: Defaults to `0.5` - _Sensitivity of wake word detection_
- `WAKE_WORDS`: Defaults to `jarvis` (Defaults to `alexa` in macOS older than `10.14`) - _Wake words to initiate Jarvis_
- `NATIVE_AUDIO`: Defaults to `False` - _If set to `True`, the response is generated as audio from the server._
<br><br>
- `VOICE_TIMEOUT`: Defaults to `3` - _Timeout for listener once wake word is detected - Awaits for a speech to begin until this limit_
- `VOICE_PHRASE_LIMIT`: Defaults to `None` - _Timeout for phrase once listener is activated - Listener will be deactivated after this limit_
<br><br>
**Customized as per the author's requirement.**
- `SWAP_URL`: Defaults to `False` - _Tries to get the public URL from `Jarvis` if it uses a `reverse proxy/CDN`_
  - I have a proxy tunneling my `localhost` from Jarvis server.
  - I have a CDN setup that's allowing me to access the tunnel with a custom domain.
  - Since I don't want my CDN to take the hit, and the tunnel origin changes often, I'm swapping the URL upon startup.

**Custom settings for speech recognition**

These are customized according to the author's voice pitch.
Please use [test_listener.py](test_listener.py) to figure out the suitable values in a trial and error method.

> These settings are added (optionally), to avoid the hard coded `VOICE_PHRASE_LIMIT`
> <br>
> Cons in using hard coded `VOICE_PHRASE_LIMIT`:
>   - Disables the listener after the set limit even the speaker is actively talking.
>   - Listener will be active until the set limit even after the speaker has stopped talking.

Sample settings (formatted as JSON object)
- `RECOGNIZER_SETTINGS`: `'{"energy_threshold": 1100, "dynamic_energy_threshold": false, "pause_threshold": 1, "phrase_threshold": 0.1}'`

**Description**
- `energy_threshold`: Minimum audio energy to consider for recording. Greater the value, louder the speech should be.
- `dynamic_energy_threshold`: Change considerable audio energy threshold dynamically.
- `pause_threshold`: Seconds of non-speaking audio before a phrase is considered complete.
- `phrase_threshold`: Minimum seconds of speaking audio before it can be considered a phrase - values below this are ignored. This helps to filter out clicks and pops.
- `non_speaking_duration`: Seconds of non-speaking audio to keep on both sides of the recording.

Refer Jarvis' [README](https://github.com/thevickypedia/Jarvis/blob/master/README.md) for more information on setting up the backend server.

#### Coding Standards
Docstring format: [`Google`](https://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings) <br>
Styling conventions: [`PEP 8`](https://www.python.org/dev/peps/pep-0008/) <br>
Clean code with pre-commit hooks: [`flake8`](https://flake8.pycqa.org/en/latest/) and 
[`isort`](https://pycqa.github.io/isort/)

#### Linting
`PreCommit` will ensure linting, and the doc creation are run on every commit.

**Requirement**
<br>
`pip install --no-cache --upgrade sphinx pre-commit recommonmark`

**Usage**
<br>
`pre-commit run --all-files`

#### Pypi Package
[![pypi-module](https://img.shields.io/badge/Software%20Repository-pypi-1f425f.svg)](https://packaging.python.org/tutorials/packaging-projects/)

[https://pypi.org/project/jarvis-ui/](https://pypi.org/project/jarvis-ui/)

#### Runbook
[![made-with-sphinx-doc](https://img.shields.io/badge/Code%20Docs-Sphinx-1f425f.svg)](https://www.sphinx-doc.org/en/master/man/sphinx-autogen.html)

[https://thevickypedia.github.io/Jarvis_UI/](https://thevickypedia.github.io/Jarvis_UI/)

### License & copyright

&copy; Vignesh Sivanandha Rao

Licensed under the [MIT License](https://github.com/thevickypedia/Jarvis_UI/blob/main/LICENSE)


Change Log
==========

0.4.1 (10/29/2022)
------------------
- Remove preflight check and timed restart
- Have an env var to determine URL swapping
- Add connection failed wav file
- Update README.md

0.4.0 (10/22/2022)
------------------
- Set voice phrase limit to 7 seconds when recognizer settings are used
- This will avoid any potential background sounds for a very long time

0.3.9 (10/22/2022)
------------------
- Add custom recognizer settings
- Add a static file to indicate a connection failure
- Update README.md

0.3.8 (09/27/2022)
------------------
- Switch `Authorization` from headers to custom `BearerAuth`
- Increase timeout for MyQ controls

0.3.7 (09/21/2022)
------------------
- Enable `speech-synthesis` via `offline-communicator`
- Add missing call option for swapper function

0.3.6 (09/14/2022)
------------------
- Swap request URL with public endpoint from Jarvis
- Write wake words on screen
- Update type hinting and docstrings

0.3.5 (09/03/2022)
------------------
- Improve wait time after wake word detection
- Initialize microphone object before startup
- Update README.md

0.3.4 (08/30/2022)
------------------
- Add individual sensitivity values for wake words
- Fig bug on manual interruption
- Bump sphinx version

0.3.3 (08/30/2022)
------------------
- Update install.sh, README.md and requirements.txt

0.3.2 (08/29/2022)
------------------
- Support wake words detection for legacy macOS
- Add more start up checks for wake words
- Log wake word used

0.3.1 (07/09/2022)
------------------
- Convert stop method to destructor
- Break loop instead of raising exception
- Fix pydantic validation

0.3.0 (07/08/2022)
------------------
- Add preconfigured wav files to process tts in background
- Reconfigure config.py to accommodate fileio changes
- Add warnings for untested OS in models.py
- Ignore lambda instead of def in pre-commit config

0.2.9 (07/06/2022)
------------------
- Let pydantic validate env vars
- Remove unused recorded frames

0.2.8 (06/28/2022)
------------------
- Hexlify token to secure it over internet
- Assert secured token during startup
- Remove parsing URL during startup

0.2.7 (06/21/2022)
------------------
- Have an option to process audio at source machine

0.2.6 (06/20/2022)
------------------
- Do not delete wav file if run from windows in a thread
- Raise connection error using parsed URL

0.2.5 (06/20/2022)
------------------
- Avoid mandating speech synthesis on MacOS
- Add detailed notes in install.sh
- Close audio streams when requested to stop

0.2.4 (06/20/2022)
------------------
- Download `PyAudio` wheel file based on python version
- Mandatory speech synthesis for Windows
- Update README.md

0.2.3 (06/19/2022)
------------------
- Disable API calls to speech synthesis by default
- Parse request url

0.2.2 (06/15/2022)
------------------
- Add `CSS` for docstrings
- Bump version

0.2.1 (06/15/2022)
------------------
- Use `Session` to reuse headers
- Set a fixed connect timeout for 3 seconds to the API
- Update docs

0.2.0 (06/15/2022)
------------------
- Update CHANGELOG

0.1.9 (06/15/2022)
------------------
- Bump version to trigger deployment

0.1.8 (06/15/2022)
------------------
- Bump version to trigger deployment

0.1.7 (06/15/2022)
------------------
- Change path when doc generation is run
- Update README.md
- Add LICENSE and update setup.py

0.1.6 (06/15/2022)
------------------
- Add template for feature request

0.1.5 (06/15/2022)
------------------
- Add template for bug report

0.1.4 (06/15/2022)
------------------
- Store exceptions in a dictionary
- Remove env var for docs_generation

0.1.3 (06/15/2022)
------------------
- Fix classifier in setup.py

0.1.2 (06/15/2022)
------------------
- Fix branch name in python-publish.yml
- Update setup.py, README.md, version.py
- Have an env var DOCS_GENERATION to filter default actions

0.1.1 (06/15/2022)
------------------
- Make Jarvis_UI as a pypi package
- Add CHANGELOG
- Update shpinx docs
- Update docstrings and type hints

0.1.0 (06/14/2022)
------------------
- Filter non-compatible words before making API calls
- Store all requirements in a config class during startup
- Remove unnecessary args in speaker.py

0.0.9 (06/13/2022)
------------------
- Send payload as json instead of query string
- Have optional acknowledgement played for delay keywords

0.0.8 (06/12/2022)
------------------
- Remove unused fileio resources
- Change base log file type hint from FilePath to str

0.0.7 (06/12/2022)
------------------
- Onboard custom `PlayAudio` module
- Close `audio_stream` before opening `Microphone`
- Fix install.sh
- Convert mp3 to wav files

0.0.6 (06/11/2022)
------------------
- Increase delay timeout to 30 seconds
- Log it and have an acknowledgement
- Have a new variable for speech timeout

0.0.5 (06/11/2022)
------------------
- Use speech synthesis running on server
- Avoid spinning up a docker in client
- Validate mandatory args during startup
- Update README.md

0.0.4 (06/11/2022)
------------------
- Get keywords before proceeding
- Load log file paths into a models.py
- Add .pre-commit-config.yaml

0.0.3 (06/10/2022)
------------------
- Move api_handler.py to its own module for future iterations

0.0.2 (06/10/2022)
------------------
- Jarvis to run via api calls

0.0.1 (06/09/2022)
------------------
- Replicate necessary parts from Jarvis repo


