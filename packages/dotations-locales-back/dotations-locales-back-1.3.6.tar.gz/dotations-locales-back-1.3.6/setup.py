# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['dotations_locales_back',
 'dotations_locales_back.common',
 'dotations_locales_back.common.mapping',
 'dotations_locales_back.simulation',
 'dotations_locales_back.web_api']

package_data = \
{'': ['*']}

install_requires = \
['OpenFisca-France-Dotations-Locales>=0.8.1,<0.9.0',
 'fastapi>=0.78.0,<0.79.0',
 'pandas>=1.3,<2.0',
 'uvicorn>=0.18.2,<0.19.0']

setup_kwargs = {
    'name': 'dotations-locales-back',
    'version': '1.3.6',
    'description': 'Le dorsal de dotations.incubateur.anct.gouv.fr',
    'long_description': "# dotations-locales-back\n\n## Installation\n\n> Les Ã©tapes qui suivent supposent que Python est dÃ©jÃ  installÃ© dans votre environnement. \nLa version de Python nÃ©cessaire est dÃ©crite dans le fichier `pyproject.toml` Ã  la rÃ©cine du dÃ©pÃ´t. \n\nLa configuration des dÃ©pendances est gÃ©rÃ©e avec [poetry](https://python-poetry.org).\n\n> Pour gÃ©rer diffÃ©rentes versions de Python sur une machine, nous utilisons `pyenv` qui permet par exemple d'installer une version avec `pyenv install 3.8.9` et `poetry env use python3.8`.\n\nPour crÃ©er un environnement virtuel et installer les dÃ©pendances de l'application, exÃ©cuter la commande suivante dans un terminal :\n\n```shell\npoetry install\n```\n\nCette commande doit s'achever sans erreur.\n\nOn peut voir les dÃ©pendances installÃ©es avec cette commande : \n\n```shell\npoetry show\n```\n> De mÃªme avec `poetry run pip list` pour les nostalgiques de pip ðŸ™‚\n\n## DÃ©marrer l'API Web\n\nL'API Web est bÃ¢tie sur le framework [FastAPI](https://fastapi.tiangolo.com). \n\nPour la dÃ©marrer en local, aprÃ¨s avoir suivi les Ã©tapes d'installation, exÃ©cuter la commande suivante dans un terminal :\n\n```shell\npoetry run uvicorn dotations_locales_back.web_api.main:app --reload\n```\n\nL'API Web est alors accessible Ã  l'adresse suivante : `http://127.0.0.1:8000`\n\nElle peut Ãªtre testÃ©e via l'interface Swagger UI Ã  cette adresse : `http://127.0.0.1:8000/docs`\n\n## Tests\n\nPour lancer les tests il faut exÃ©cuter la commande suivante dans un terminal :\n\n```shell\npoetry run pytest\n```\n\nOu depuis un terminal avec l'environnement virtuel activÃ© :\n\n```shell\npytest\n```\n\n\n## DÃ©ploiement sur Scalingo\n\nPour dÃ©ployer cette application sur Scalingo, il est nÃ©cessaire de crÃ©er 3 fichiers supplÃ©mentaires. En effet Scalingo n'est pas compatible avec les fichiers de gestion des dÃ©pendances crÃ©Ã©s par Poetry.\n\nVoici les fichiers Ã  crÃ©er : \n* `requirements.txt` : Scalingo se base sur ce fichier pour installer les dÃ©pendances.  \nPour le crÃ©er il faut Ã©xÃ©cuter la commande suivante :\n    ```shell\n    poetry export -f requirements.txt --without-hashes --output requirements.txt\n    ```\n> **Attention** : Si des dÃ©pendances sont ajoutÃ©es via Poetry, il faudra regÃ©nÃ©rer le fichier `requirements.txt` Ã  chaque fois Ã©galement. En effet, Poetry gÃ¨re automatiquement l'ajout de dÃ©pendances dans son propre fichier `pyproject.toml` mais pas dans le fichier `requirements.txt`.\n\n* `runtime.txt` : Scalingo se base sur ce fichier pour dÃ©finir la version de python Ã  utiliser. Il s'agit donc de s'assurer de sa cohÃ©rence avec la version de Python indiquÃ©e dans `pyproject.toml`\n\n* `Procfile` : Lors du dÃ©ploiement Scalingo se base sur ce fichier pour Ã©xÃ©cuter la commande qui lance l'application.\nL'hÃ´te requis est `0.0.0.0` et il faut Ã©galement que le serveur Ã©coute le port dÃ©fini dans une variable d'environnement `PORT`. Il faut donc ajouter la ligne suivante au fichier `Procfile` :\n    ```\n    web: uvicorn web_api.main:app --host=0.0.0.0 --port=${PORT:-5000}\n    ```\n",
    'author': 'Equipe Dotations Locales',
    'author_email': 'contact-dotations-locales@anct.gouv.fr',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://gitlab.com/incubateur-territoires/startups/dotations-locales/dotations-locales-back/',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
