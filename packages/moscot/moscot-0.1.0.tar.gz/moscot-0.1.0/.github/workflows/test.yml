name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pre-commit
          key: precommit-${{ env.pythonLocation }}-${{ hashFiles('**/.pre-commit-config.yaml') }}

      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Lint
        run: |-
          echo "LINTING DISABLED"

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions codecov
      - name: Test
        run: |
          tox -vv
      - name: Upload coverage
        env:
          CODECOV_NAME: ${{ matrix.python }}-${{ matrix.os }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |-
          codecov --no-color --required --flags unittests

  regenerate-notebooks:
    needs: test
    if: ${{ (github.event_name == 'push' && (github.ref == 'refs/heads/main')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Rebuild tutorials/examples
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.NOTEBOOKS_ACCESS_TOKEN }}
          repository: theislab/moscot_notebooks
          event-type: rebuild
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

  deploy:
    # this will run when you have tagged a commit, starting with "v*"
    # and requires that you have put your twine API key in your
    # github secrets (see readme for details)
    needs: [test, regenerate-notebooks]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools setuptools_scm wheel twine build
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
        run: |
          git tag
          python -m build .
          twine upload dist/*
