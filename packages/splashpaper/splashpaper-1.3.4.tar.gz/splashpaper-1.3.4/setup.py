# -*- coding: utf-8 -*-
from setuptools import setup

modules = \
['splashpaper']
install_requires = \
['requests>=2.28.1,<3.0.0']

setup_kwargs = {
    'name': 'splashpaper',
    'version': '1.3.4',
    'description': 'Wallpaper manager with unsplash.com integration',
    'long_description': '# splashpaper\n\nTurn Unsplash into a desktop wallpaper.    \nWorks on Windows, most Linux DEs/WMs, macOS and Android (check [compatibility](#compatibility))\n\n# Installation\n\nTo use this script, you need Python 3.6+ and pip installed.    \nThen, just run:\n\n`python -m pip install splashpaper`\n\n# Getting help\n\nIt\'s as simple as:\n\n`python -m splashpaper --help`    \n\nThat would print help (mostly the same information as below, but shorter)    \n\n# Usage\n\n## Basic\n\nBasic usage is simple:\n\n`python -m splashpaper`\n\nBut that would set a random picture! Not really cool...\n\n## Resolution\n\nFirst of all, the script currently doesn\'t know your screen resolution.    \nProvide it with `-r`/`--resolution` option to fetch smaller picture, e.g:\n\n`python -m splashpaper --resolution 1920x1080`\n\n## Sources\n\nThen you\'d probably want some specific images.    \nSplashdesktop got your back here!    \n\nYou can provide four types of sources (and combine them), each with as many sources as you want:\n\n### Search terms\n\nWith `-s`/`--search` option:\n\n`python -m splashpaper --search sea ocean water`\n\n### Collections \n\nWith `-c`/`--collections` option (that\'s my dark wallpapers collection, by the way):\n\n`python -m splashpaper --collections 22546183`\n\n### Presets\n\nIf you don\'t really know where to look:    \n\n`python -m splashpaper --presets dark`\n\nAvailable options: `dark, light, all-wallpapers, abstract, nature, night, city`\n\n### User photos\n\nWith `-u`/`--users` option:\n\n`python -m splashpaper --users erondu aditya1702`\n\n### User likes\n\nWith `-l`/`--likes` option:\n\n`python -m splashpaper --likes qevitta erondu`\n\n## Modifiers\n\nThere are three modifiers:\n\n- `--featured`: Use photos picked by Unsplash editors.\n- `--daily`: Use photo of the day. \n- `--weekly`: Use photo of the week (overrides `--daily`).\n\nThese can be used with any combination of sources.\n\n## Slideshow\n\nIf you want to change wallpaper once in a while, you can set interval in seconds with `-i`/`--interval`:\n\n`python -m splashpaper --interval 600`\n\n## Autostart\n\nIf this wasn\'t obvious, you need to add this script to autostart if you want it to work continiously.\n\n# Examples\n\nPhotos from [my collection](https://unsplash.com/collections/9943257/wallpapers) of wallpapers, changing every minute\n\n`python -m splashpaper --resolution 1920x1080 --collections 9943257 --interval 60`\n\nPhoto of the day from [my collection](https://unsplash.com/collections/9943257/wallpapers) of wallpapers\n\n`python -m splashpaper --resolution 1920x1080 --collections 9943257 --daily`\n\nWater photos, changing every 10 minutes\n\n`python -m splashpaper --resolution 1920x1080 --search water ocean sea --interval 600`\n\nFeatured photo of the day\n\n`python -m splashpaper --resolution 1920x1080 --featured --daily`\n\n# Using as a module\n\nYou can use script as a module, using dictionary of options as `args`:\n\n```python\nfrom splashpaper import main_action\nfrom time import sleep\n\nargs = {\n    "collections": ["9943257"],\n    "resolution": "1920x1080",\n}\n\nwhile True:\n    main_action(args)\n    sleep(60)\n\n```\n\n## Functions\nScript uses a very modular workflow.    \nBy default, script calls `main_loop(args)`, which in turn calls `main_action(args)` once or with interval.\n\n`main_action(args)` is defined as:\n\n```python\ndef main_action(args):\n    return set_wallpaper(\n        download_file(\n            build_url(args), \n            abspath(dirname(__file__)) + "/wallpaper.jpg"\n        )\n    )\n```\n\nThis snippet shows that:\n\n- To build a URL based on your args, script uses `build_url(args)`\n- To download a picture from that URL, script uses `download(url, path)`, which returns path\n- To set picture as a wallpaper, script uses `set_wallpaper(path)`\n\n\n# Compatibility\n\nSplashpaper runs on:\n\n- Windows\n- macOS (**Warning: when changing wallpaper, Dock restarts and screen may freeze for half a second.**)\n- Linux\n    - XFCE\n    - LXDE/LXQt\n    - Gnome\n    - Unity\n    - Cinnamon\n    - Mate\n    - i3\n    - bspwm\n    - awesome\n    - sway\n    - ... and also any other de/wm where feh can change wallpaper (used as a fallback)\n- Android\n\n## Usage on Android\n\nTo use module on Android: \n\n1. Install Termux.    \n2. In Termux, install Python (`pkg install python`) and Termux:API (`pkg install termux-api`) if it\'s not already installed.\n3. Install module in Termux just as on desktop: (`python -m pip install splashpaper`)\n4. [Use it!](#usage)',
    'author': 'Dmitry Gritsenko',
    'author_email': 'splashpaper@evtn.ru',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/evtn/splashpaper',
    'py_modules': modules,
    'install_requires': install_requires,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
