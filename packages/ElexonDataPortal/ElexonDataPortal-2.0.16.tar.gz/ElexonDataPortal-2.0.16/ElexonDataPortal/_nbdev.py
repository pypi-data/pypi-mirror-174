# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"convert_file_to_json": "00-documentation.ipynb",
         "encode_file_as_utf8": "00-documentation.ipynb",
         "convert_nb_to_md": "00-documentation.ipynb",
         "junix.exporter.convert_file_to_json": "00-documentation.ipynb",
         "MyHTMLParser": "00-documentation.ipynb",
         "convert_df_to_md": "00-documentation.ipynb",
         "remove_empty_index_col": "00-documentation.ipynb",
         "extract_div_to_md_table": "00-documentation.ipynb",
         "extract_div_to_md_tables": "00-documentation.ipynb",
         "clean_md_file_tables": "00-documentation.ipynb",
         "get_substring_idxs": "00-documentation.ipynb",
         "clean_progress_bars": "00-documentation.ipynb",
         "correct_png_name": "00-documentation.ipynb",
         "specify_nb_in_img_fp": "00-documentation.ipynb",
         "get_nb_naive_png_names": "00-documentation.ipynb",
         "get_filename_correction_map": "00-documentation.ipynb",
         "clean_md_text_img_fps": "00-documentation.ipynb",
         "clean_md_files_img_fps": "00-documentation.ipynb",
         "convert_and_clean_nb_to_md": "00-documentation.ipynb",
         "RequestError": "01-utils.ipynb",
         "check_status": "01-utils.ipynb",
         "check_capping": "01-utils.ipynb",
         "expand_cols": "01-utils.ipynb",
         "parse_xml_response": "01-utils.ipynb",
         "dt_rng_to_SPs": "01-utils.ipynb",
         "parse_local_datetime": "01-utils.ipynb",
         "init_spec": "02-spec-gen.ipynb",
         "load_endpoints_df": "02-spec-gen.ipynb",
         "get_endpoint_single_attr": "02-spec-gen.ipynb",
         "init_stream_dict": "02-spec-gen.ipynb",
         "add_params_to_stream_dict": "02-spec-gen.ipynb",
         "add_streams_to_spec": "02-spec-gen.ipynb",
         "construct_spec": "02-spec-gen.ipynb",
         "save_spec": "02-spec-gen.ipynb",
         "load_API_yaml": "02-spec-gen.ipynb",
         "clean_path_name": "03-raw-methods.ipynb",
         "dict_head": "03-raw-methods.ipynb",
         "get_available_methods": "03-raw-methods.ipynb",
         "extract_parameter_example": "03-raw-methods.ipynb",
         "construct_parameters": "03-raw-methods.ipynb",
         "construct_path_functions": "03-raw-methods.ipynb",
         "construct_all_functions": "03-raw-methods.ipynb",
         "save_methods": "03-raw-methods.ipynb",
         "test_endpoints": "04-client-prep.ipynb",
         "construct_method_to_params_dict": "04-client-prep.ipynb",
         "construct_request_type_filter": "04-client-prep.ipynb",
         "check_request_type_filter": "04-client-prep.ipynb",
         "determine_request_type_from_fields": "04-client-prep.ipynb",
         "determine_method_request_types": "04-client-prep.ipynb",
         "construct_method_to_params_map": "04-client-prep.ipynb",
         "construct_method_info_dict": "04-client-prep.ipynb",
         "retry_request": "05-orchestrator.ipynb",
         "if_possible_parse_local_datetime": "05-orchestrator.ipynb",
         "SP_and_date_request": "05-orchestrator.ipynb",
         "handle_capping": "05-orchestrator.ipynb",
         "date_range_request": "05-orchestrator.ipynb",
         "year_request": "05-orchestrator.ipynb",
         "construct_year_month_pairs": "05-orchestrator.ipynb",
         "year_and_month_request": "05-orchestrator.ipynb",
         "clean_year_week": "05-orchestrator.ipynb",
         "construct_year_week_pairs": "05-orchestrator.ipynb",
         "year_and_week_request": "05-orchestrator.ipynb",
         "non_temporal_request": "05-orchestrator.ipynb",
         "query_orchestrator": "05-orchestrator.ipynb",
         "generate_streams": "06-client-gen.ipynb",
         "save_api_client": "06-client-gen.ipynb",
         "app": "vis-00-gen.ipynb",
         "rebuild_library": "07-cli-rebuild.ipynb",
         "clean_route_gdf": "09-map-gen.ipynb",
         "load_route_gdf": "09-map-gen.ipynb",
         "construct_df_PN_pivot_dt_rng": "09-map-gen.ipynb",
         "construct_PN_pivot_df": "09-map-gen.ipynb",
         "get_PHYBM_df": "09-map-gen.ipynb",
         "download_latest_PHYBM_data": "09-map-gen.ipynb",
         "get_files": "09-map-gen.ipynb",
         "load_most_recent_PN_data": "09-map-gen.ipynb",
         "construct_osuked_id_mappings": "09-map-gen.ipynb",
         "extract_PN_ts": "09-map-gen.ipynb",
         "construct_map_df": "09-map-gen.ipynb",
         "df_to_gdf": "09-map-gen.ipynb",
         "construct_map_geojson": "09-map-gen.ipynb",
         "save_map_geojson": "09-map-gen.ipynb",
         "get_nearest_dt_idx": "09-map-gen.ipynb",
         "generate_map_js": "09-map-gen.ipynb",
         "generate_map_md": "09-map-gen.ipynb",
         "generate_map": "09-map-gen.ipynb",
         "update_version": "10-nbdev.ipynb",
         "add_init": "10-nbdev.ipynb",
         "export.add_init": "10-nbdev.ipynb",
         "export.update_version": "10-nbdev.ipynb",
         "prepare_nbdev_module": "10-nbdev.ipynb",
         "notebook2script": "10-nbdev.ipynb",
         "add_mod_extra_indices": "10-nbdev.ipynb",
         "add_mod_extra_modules": "10-nbdev.ipynb",
         "add_extra_code_desc_to_mod": "10-nbdev.ipynb",
         "rgb_2_plt_tuple": "vis-01-ei.ipynb",
         "get_vis_func": "vis-00-gen.ipynb",
         "get_vis_md_text": "vis-00-gen.ipynb",
         "get_rerun_vis_bool": "vis-00-gen.ipynb",
         "update_vis_configs": "vis-00-gen.ipynb",
         "update_vis": "vis-00-gen.ipynb",
         "generate_vis": "vis-00-gen.ipynb",
         "get_ei_raw_urls": "vis-01-ei.ipynb",
         "get_ei_df": "vis-01-ei.ipynb",
         "clean_EI_df_for_plot": "vis-01-ei.ipynb",
         "convert_fuel_colour_dict_to_plt_tuple": "vis-01-ei.ipynb",
         "hide_spines": "vis-01-ei.ipynb",
         "stacked_fuel_plot": "vis-01-ei.ipynb",
         "construct_GB_decarb_progess_md_txt": "vis-01-ei.ipynb",
         "generate_GB_decarb_progess": "vis-01-ei.ipynb",
         "get_price_dispatchable_s": "vis-01-ei.ipynb",
         "construct_reg_dates": "vis-01-ei.ipynb",
         "estimate_ts_surface": "vis-01-ei.ipynb",
         "plot_ts_surface_estimate": "vis-01-ei.ipynb",
         "construct_moe_md_txt": "vis-01-ei.ipynb",
         "generate_moe": "vis-01-ei.ipynb",
         "get_wf_ids": "vis-02-curtailment.ipynb",
         "flatten_list": "vis-02-curtailment.ipynb",
         "get_curtailed_wfs_df": "vis-02-curtailment.ipynb",
         "load_curtailed_wfs": "vis-02-curtailment.ipynb",
         "add_next_week_of_data_to_curtailed_wfs": "vis-02-curtailment.ipynb",
         "get_latest_lolpdrm_df": "vis-03-lolp.ipynb",
         "clean_fcst_df": "vis-03-lolp.ipynb",
         "AxTransformer": "vis-03-lolp.ipynb",
         "set_date_ticks": "vis-03-lolp.ipynb",
         "create_fcst_htmp": "vis-03-lolp.ipynb",
         "create_fcst_delta_htmp": "vis-03-lolp.ipynb",
         "save_lolpdrm_imgs": "vis-03-lolp.ipynb",
         "construct_drm_md_txt": "vis-03-lolp.ipynb",
         "generate_lolpdrm_imgs_text": "vis-03-lolp.ipynb",
         "Client": "06-client-gen.ipynb",
         "get_B0610": "03-raw-methods.ipynb",
         "get_B0620": "03-raw-methods.ipynb",
         "get_B0630": "03-raw-methods.ipynb",
         "get_B0640": "03-raw-methods.ipynb",
         "get_B0650": "03-raw-methods.ipynb",
         "get_B0710": "03-raw-methods.ipynb",
         "get_B0720": "03-raw-methods.ipynb",
         "get_B0810": "03-raw-methods.ipynb",
         "get_B0910": "03-raw-methods.ipynb",
         "get_B1010": "03-raw-methods.ipynb",
         "get_B1020": "03-raw-methods.ipynb",
         "get_B1030": "03-raw-methods.ipynb",
         "get_B1320": "03-raw-methods.ipynb",
         "get_B1330": "03-raw-methods.ipynb",
         "get_B1410": "03-raw-methods.ipynb",
         "get_B1420": "03-raw-methods.ipynb",
         "get_B1430": "03-raw-methods.ipynb",
         "get_B1440": "03-raw-methods.ipynb",
         "get_B1510": "03-raw-methods.ipynb",
         "get_B1520": "03-raw-methods.ipynb",
         "get_B1530": "03-raw-methods.ipynb",
         "get_B1540": "03-raw-methods.ipynb",
         "get_B1610": "03-raw-methods.ipynb",
         "get_B1620": "03-raw-methods.ipynb",
         "get_B1630": "03-raw-methods.ipynb",
         "get_B1720": "03-raw-methods.ipynb",
         "get_B1730": "03-raw-methods.ipynb",
         "get_B1740": "03-raw-methods.ipynb",
         "get_B1750": "03-raw-methods.ipynb",
         "get_B1760": "03-raw-methods.ipynb",
         "get_B1770": "03-raw-methods.ipynb",
         "get_B1780": "03-raw-methods.ipynb",
         "get_B1790": "03-raw-methods.ipynb",
         "get_B1810": "03-raw-methods.ipynb",
         "get_B1820": "03-raw-methods.ipynb",
         "get_B1830": "03-raw-methods.ipynb",
         "get_BOD": "03-raw-methods.ipynb",
         "get_CDN": "03-raw-methods.ipynb",
         "get_DERSYSDATA": "03-raw-methods.ipynb",
         "get_DETSYSPRICES": "03-raw-methods.ipynb",
         "get_DEVINDOD": "03-raw-methods.ipynb",
         "get_DISBSAD": "03-raw-methods.ipynb",
         "get_FORDAYDEM": "03-raw-methods.ipynb",
         "get_FREQ": "03-raw-methods.ipynb",
         "get_FUELHH": "03-raw-methods.ipynb",
         "get_LOLPDRM": "03-raw-methods.ipynb",
         "get_MELIMBALNGC": "03-raw-methods.ipynb",
         "get_MID": "03-raw-methods.ipynb",
         "get_MessageDetailRetrieval": "03-raw-methods.ipynb",
         "get_MessageListRetrieval": "03-raw-methods.ipynb",
         "get_NETBSAD": "03-raw-methods.ipynb",
         "get_NONBM": "03-raw-methods.ipynb",
         "get_PHYBMDATA": "03-raw-methods.ipynb",
         "get_ROLSYSDEM": "03-raw-methods.ipynb",
         "get_SYSDEM": "03-raw-methods.ipynb",
         "get_SYSWARN": "03-raw-methods.ipynb",
         "get_TEMP": "03-raw-methods.ipynb",
         "get_WINDFORFUELHH": "03-raw-methods.ipynb"}

modules = ["api.py",
           "dev/clientgen.py",
           "dev/clientprep.py",
           "dev/docs.py",
           "dev/nbdev.py",
           "dev/orchestrator.py",
           "dev/raw.py",
           "dev/rawgen.py",
           "dev/rdf.py",
           "dev/specgen.py",
           "dev/utils.py",
           "rebuild.py",
           "vis/curtailment.py",
           "vis/ei.py",
           "vis/gen.py",
           "vis/lolp.py",
           "vis/map.py"]

doc_url = "https://OSUKED.github.io/ElexonDataPortal/"

git_url = "https://github.com/OSUKED/ElexonDataPortal"

def custom_doc_links(name): return None
