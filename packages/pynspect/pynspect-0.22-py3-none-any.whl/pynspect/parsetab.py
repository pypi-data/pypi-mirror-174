
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA CONSTANT DATETIME FLOAT FUNCTION INTEGER IPV4 IPV6 LBRACK LPAREN OP_AND OP_AND_P OP_DIVIDE OP_EQ OP_EXISTS OP_GE OP_GT OP_IN OP_IS OP_LE OP_LIKE OP_LT OP_MINUS OP_MODULO OP_NE OP_NOT OP_OR OP_OR_P OP_PLUS OP_TIMES OP_XOR OP_XOR_P RBRACK RPAREN TIMEDELTA VARIABLEexpression : xor_expression OP_OR expression\n                      | xor_expressionxor_expression : and_expression OP_XOR xor_expression\n                          | and_expressionand_expression : or_p_expression OP_AND and_expression\n                          | or_p_expressionor_p_expression : xor_p_expression OP_OR_P or_p_expression\n                      | xor_p_expressionxor_p_expression : and_p_expression OP_XOR_P xor_p_expression\n                          | and_p_expressionand_p_expression : not_expression OP_AND_P and_p_expression\n                          | not_expressionnot_expression : OP_NOT ex_expression\n                          | ex_expressionex_expression : OP_EXISTS cmp_expression\n                         | cmp_expressioncmp_expression : term OP_LIKE cmp_expression\n                          | term OP_IN cmp_expression\n                          | term OP_IS cmp_expression\n                          | term OP_EQ cmp_expression\n                          | term OP_NE cmp_expression\n                          | term OP_GT cmp_expression\n                          | term OP_GE cmp_expression\n                          | term OP_LT cmp_expression\n                          | term OP_LE cmp_expression\n                          | termterm : factor OP_PLUS term\n                | factor OP_MINUS term\n                | factor OP_TIMES term\n                | factor OP_DIVIDE term\n                | factor OP_MODULO term\n                | factorfactor : IPV4\n                  | IPV6\n                  | DATETIME\n                  | TIMEDELTA\n                  | INTEGER\n                  | FLOAT\n                  | VARIABLE\n                  | CONSTANT\n                  | FUNCTION RPAREN\n                  | FUNCTION expression RPAREN\n                  | LBRACK list RBRACK\n                  | LPAREN expression RPARENlist : IPV4\n                | IPV6\n                | DATETIME\n                | TIMEDELTA\n                | INTEGER\n                | FLOAT\n                | VARIABLE\n                | CONSTANT\n                | IPV4 COMMA list\n                | IPV6 COMMA list\n                | DATETIME COMMA list\n                | TIMEDELTA COMMA list\n                | INTEGER COMMA list\n                | FLOAT COMMA list\n                | VARIABLE COMMA list\n                | CONSTANT COMMA list'
    
_lr_action_items = {'OP_NOT':([0,22,24,25,26,27,28,29,30,],[8,8,8,8,8,8,8,8,8,]),'OP_EXISTS':([0,8,22,24,25,26,27,28,29,30,],[10,10,10,10,10,10,10,10,10,10,]),'IPV4':([0,8,10,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,81,82,83,84,85,86,87,88,],[14,14,14,14,50,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,50,50,50,50,50,50,50,50,]),'IPV6':([0,8,10,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,81,82,83,84,85,86,87,88,],[15,15,15,15,51,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,51,51,51,51,51,51,51,51,]),'DATETIME':([0,8,10,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,81,82,83,84,85,86,87,88,],[16,16,16,16,52,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,52,52,52,52,52,52,52,52,]),'TIMEDELTA':([0,8,10,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,81,82,83,84,85,86,87,88,],[17,17,17,17,53,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,53,53,53,53,53,53,53,53,]),'INTEGER':([0,8,10,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,81,82,83,84,85,86,87,88,],[18,18,18,18,54,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,54,54,54,54,54,54,54,54,]),'FLOAT':([0,8,10,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,81,82,83,84,85,86,87,88,],[19,19,19,19,55,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,55,55,55,55,55,55,55,55,]),'VARIABLE':([0,8,10,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,81,82,83,84,85,86,87,88,],[20,20,20,20,56,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,56,56,56,56,56,56,56,56,]),'CONSTANT':([0,8,10,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,81,82,83,84,85,86,87,88,],[21,21,21,21,57,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,57,57,57,57,57,57,57,57,]),'FUNCTION':([0,8,10,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'LBRACK':([0,8,10,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'LPAREN':([0,8,10,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'$end':([1,2,3,4,5,6,7,9,11,12,13,14,15,16,17,18,19,20,21,31,32,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,89,],[0,-2,-4,-6,-8,-10,-12,-14,-16,-26,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-15,-41,-1,-3,-5,-7,-9,-11,-17,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_OR':([2,3,4,5,6,7,9,11,12,13,14,15,16,17,18,19,20,21,31,32,47,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,89,],[25,-4,-6,-8,-10,-12,-14,-16,-26,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-15,-41,-3,-5,-7,-9,-11,-17,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-42,-43,-44,]),'RPAREN':([2,3,4,5,6,7,9,11,12,13,14,15,16,17,18,19,20,21,22,31,32,47,48,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,89,],[-2,-4,-6,-8,-10,-12,-14,-16,-26,-32,-33,-34,-35,-36,-37,-38,-39,-40,47,-13,-15,-41,79,89,-1,-3,-5,-7,-9,-11,-17,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_XOR':([3,4,5,6,7,9,11,12,13,14,15,16,17,18,19,20,21,31,32,47,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,89,],[26,-6,-8,-10,-12,-14,-16,-26,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-15,-41,-5,-7,-9,-11,-17,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_AND':([4,5,6,7,9,11,12,13,14,15,16,17,18,19,20,21,31,32,47,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,89,],[27,-8,-10,-12,-14,-16,-26,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-15,-41,-7,-9,-11,-17,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_OR_P':([5,6,7,9,11,12,13,14,15,16,17,18,19,20,21,31,32,47,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,89,],[28,-10,-12,-14,-16,-26,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-15,-41,-9,-11,-17,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_XOR_P':([6,7,9,11,12,13,14,15,16,17,18,19,20,21,31,32,47,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,89,],[29,-12,-14,-16,-26,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-15,-41,-11,-17,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_AND_P':([7,9,11,12,13,14,15,16,17,18,19,20,21,31,32,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,89,],[30,-14,-16,-26,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-15,-41,-17,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_LIKE':([12,13,14,15,16,17,18,19,20,21,47,74,75,76,77,78,79,80,89,],[33,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_IN':([12,13,14,15,16,17,18,19,20,21,47,74,75,76,77,78,79,80,89,],[34,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_IS':([12,13,14,15,16,17,18,19,20,21,47,74,75,76,77,78,79,80,89,],[35,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_EQ':([12,13,14,15,16,17,18,19,20,21,47,74,75,76,77,78,79,80,89,],[36,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_NE':([12,13,14,15,16,17,18,19,20,21,47,74,75,76,77,78,79,80,89,],[37,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_GT':([12,13,14,15,16,17,18,19,20,21,47,74,75,76,77,78,79,80,89,],[38,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_GE':([12,13,14,15,16,17,18,19,20,21,47,74,75,76,77,78,79,80,89,],[39,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_LT':([12,13,14,15,16,17,18,19,20,21,47,74,75,76,77,78,79,80,89,],[40,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_LE':([12,13,14,15,16,17,18,19,20,21,47,74,75,76,77,78,79,80,89,],[41,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-27,-28,-29,-30,-31,-42,-43,-44,]),'OP_PLUS':([13,14,15,16,17,18,19,20,21,47,79,80,89,],[42,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,]),'OP_MINUS':([13,14,15,16,17,18,19,20,21,47,79,80,89,],[43,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,]),'OP_TIMES':([13,14,15,16,17,18,19,20,21,47,79,80,89,],[44,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,]),'OP_DIVIDE':([13,14,15,16,17,18,19,20,21,47,79,80,89,],[45,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,]),'OP_MODULO':([13,14,15,16,17,18,19,20,21,47,79,80,89,],[46,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,]),'RBRACK':([49,50,51,52,53,54,55,56,57,90,91,92,93,94,95,96,97,],[80,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,]),'COMMA':([50,51,52,53,54,55,56,57,],[81,82,83,84,85,86,87,88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,22,24,25,],[1,48,58,59,]),'xor_expression':([0,22,24,25,26,],[2,2,2,2,60,]),'and_expression':([0,22,24,25,26,27,],[3,3,3,3,3,61,]),'or_p_expression':([0,22,24,25,26,27,28,],[4,4,4,4,4,4,62,]),'xor_p_expression':([0,22,24,25,26,27,28,29,],[5,5,5,5,5,5,5,63,]),'and_p_expression':([0,22,24,25,26,27,28,29,30,],[6,6,6,6,6,6,6,6,64,]),'not_expression':([0,22,24,25,26,27,28,29,30,],[7,7,7,7,7,7,7,7,7,]),'ex_expression':([0,8,22,24,25,26,27,28,29,30,],[9,31,9,9,9,9,9,9,9,9,]),'cmp_expression':([0,8,10,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,],[11,11,32,11,11,11,11,11,11,11,11,65,66,67,68,69,70,71,72,73,]),'term':([0,8,10,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,74,75,76,77,78,]),'factor':([0,8,10,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'list':([23,81,82,83,84,85,86,87,88,],[49,90,91,92,93,94,95,96,97,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> xor_expression OP_OR expression','expression',3,'p_expression','gparser.py',272),
  ('expression -> xor_expression','expression',1,'p_expression','gparser.py',273),
  ('xor_expression -> and_expression OP_XOR xor_expression','xor_expression',3,'p_xor_expression','gparser.py',281),
  ('xor_expression -> and_expression','xor_expression',1,'p_xor_expression','gparser.py',282),
  ('and_expression -> or_p_expression OP_AND and_expression','and_expression',3,'p_and_expression','gparser.py',290),
  ('and_expression -> or_p_expression','and_expression',1,'p_and_expression','gparser.py',291),
  ('or_p_expression -> xor_p_expression OP_OR_P or_p_expression','or_p_expression',3,'p_or_p_expression','gparser.py',299),
  ('or_p_expression -> xor_p_expression','or_p_expression',1,'p_or_p_expression','gparser.py',300),
  ('xor_p_expression -> and_p_expression OP_XOR_P xor_p_expression','xor_p_expression',3,'p_xor_p_expression','gparser.py',308),
  ('xor_p_expression -> and_p_expression','xor_p_expression',1,'p_xor_p_expression','gparser.py',309),
  ('and_p_expression -> not_expression OP_AND_P and_p_expression','and_p_expression',3,'p_and_p_expression','gparser.py',318),
  ('and_p_expression -> not_expression','and_p_expression',1,'p_and_p_expression','gparser.py',319),
  ('not_expression -> OP_NOT ex_expression','not_expression',2,'p_not_expression','gparser.py',327),
  ('not_expression -> ex_expression','not_expression',1,'p_not_expression','gparser.py',328),
  ('ex_expression -> OP_EXISTS cmp_expression','ex_expression',2,'p_ex_expression','gparser.py',336),
  ('ex_expression -> cmp_expression','ex_expression',1,'p_ex_expression','gparser.py',337),
  ('cmp_expression -> term OP_LIKE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',346),
  ('cmp_expression -> term OP_IN cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',347),
  ('cmp_expression -> term OP_IS cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',348),
  ('cmp_expression -> term OP_EQ cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',349),
  ('cmp_expression -> term OP_NE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',350),
  ('cmp_expression -> term OP_GT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',351),
  ('cmp_expression -> term OP_GE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',352),
  ('cmp_expression -> term OP_LT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',353),
  ('cmp_expression -> term OP_LE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',354),
  ('cmp_expression -> term','cmp_expression',1,'p_cmp_expression','gparser.py',355),
  ('term -> factor OP_PLUS term','term',3,'p_term','gparser.py',363),
  ('term -> factor OP_MINUS term','term',3,'p_term','gparser.py',364),
  ('term -> factor OP_TIMES term','term',3,'p_term','gparser.py',365),
  ('term -> factor OP_DIVIDE term','term',3,'p_term','gparser.py',366),
  ('term -> factor OP_MODULO term','term',3,'p_term','gparser.py',367),
  ('term -> factor','term',1,'p_term','gparser.py',368),
  ('factor -> IPV4','factor',1,'p_factor','gparser.py',376),
  ('factor -> IPV6','factor',1,'p_factor','gparser.py',377),
  ('factor -> DATETIME','factor',1,'p_factor','gparser.py',378),
  ('factor -> TIMEDELTA','factor',1,'p_factor','gparser.py',379),
  ('factor -> INTEGER','factor',1,'p_factor','gparser.py',380),
  ('factor -> FLOAT','factor',1,'p_factor','gparser.py',381),
  ('factor -> VARIABLE','factor',1,'p_factor','gparser.py',382),
  ('factor -> CONSTANT','factor',1,'p_factor','gparser.py',383),
  ('factor -> FUNCTION RPAREN','factor',2,'p_factor','gparser.py',384),
  ('factor -> FUNCTION expression RPAREN','factor',3,'p_factor','gparser.py',385),
  ('factor -> LBRACK list RBRACK','factor',3,'p_factor','gparser.py',386),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','gparser.py',387),
  ('list -> IPV4','list',1,'p_list','gparser.py',398),
  ('list -> IPV6','list',1,'p_list','gparser.py',399),
  ('list -> DATETIME','list',1,'p_list','gparser.py',400),
  ('list -> TIMEDELTA','list',1,'p_list','gparser.py',401),
  ('list -> INTEGER','list',1,'p_list','gparser.py',402),
  ('list -> FLOAT','list',1,'p_list','gparser.py',403),
  ('list -> VARIABLE','list',1,'p_list','gparser.py',404),
  ('list -> CONSTANT','list',1,'p_list','gparser.py',405),
  ('list -> IPV4 COMMA list','list',3,'p_list','gparser.py',406),
  ('list -> IPV6 COMMA list','list',3,'p_list','gparser.py',407),
  ('list -> DATETIME COMMA list','list',3,'p_list','gparser.py',408),
  ('list -> TIMEDELTA COMMA list','list',3,'p_list','gparser.py',409),
  ('list -> INTEGER COMMA list','list',3,'p_list','gparser.py',410),
  ('list -> FLOAT COMMA list','list',3,'p_list','gparser.py',411),
  ('list -> VARIABLE COMMA list','list',3,'p_list','gparser.py',412),
  ('list -> CONSTANT COMMA list','list',3,'p_list','gparser.py',413),
]
