{"version":3,"file":"lib_widget_js-webpack_sharing_consume_default_three_three.9f19273974dcc08dc945.js","mappings":";;;;;;;;;AAAa;AACb;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,sBAAsB;AAC5C;AACA;AACA;AACA,aAAa,mBAAO,CAAC,uCAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,mBAAmB;AACnB;;;;;;;;;;;ACpBa;AACb;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,kBAAkB;AACtC,eAAe,mBAAO,CAAC,oFAAuB;AAC9C,2BAA2B,mBAAO,CAAC,+DAAO;AAC1C,kBAAkB,mBAAO,CAAC,mCAAW;AACrC,wBAAwB,mBAAO,CAAC,8GAA2C;AAC3E,qBAAqB,mBAAO,CAAC,oGAAsC;AACnE;AACA,mBAAO,CAAC,2CAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,gDAAgD;AAChD;AACA;AACA,YAAY,4BAA4B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;;;;;;;;;ACrRA;AACA,kCAAkC,mBAAO,CAAC,qGAAgD;AAC1F;AACA;AACA,mCAAmC,wBAAwB,yCAAyC,GAAG;AACvG;AACA;;;;;;;;;;;ACNA,UAAU,mBAAO,CAAC,oJAAwE;AAC1F,0BAA0B,mBAAO,CAAC,qHAAuD;;AAEzF;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;AAIA","sources":["webpack://ipyrhinoviewer/./lib/version.js","webpack://ipyrhinoviewer/./lib/widget.js","webpack://ipyrhinoviewer/./css/widget.css","webpack://ipyrhinoviewer/./css/widget.css?a195"],"sourcesContent":["\"use strict\";\n// Copyright (c) Florian Jaeger\n// Distributed under the terms of the Modified BSD License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MODULE_NAME = exports.MODULE_VERSION = void 0;\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst data = require('../package.json');\n/**\n * The _model_module_version/_view_module_version this package implements.\n *\n * The html widget manager assumes that this is the same as the npm package\n * version number.\n */\nexports.MODULE_VERSION = data.version;\n/*\n * The current package name.\n */\nexports.MODULE_NAME = data.name;\n//# sourceMappingURL=version.js.map","\"use strict\";\n// Copyright (c) Florian Jaeger\n// Distributed under the terms of the Modified BSD License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RhinoView = exports.RhinoModel = void 0;\nconst base_1 = require(\"@jupyter-widgets/base\");\nconst THREE = __importStar(require(\"three\"));\nconst version_1 = require(\"./version\");\nconst OrbitControls_1 = require(\"three/examples/jsm/controls/OrbitControls\");\nconst _3DMLoader_1 = require(\"three/examples/jsm/loaders/3DMLoader\");\n// Import the CSS\nrequire(\"../css/widget.css\");\nclass RhinoModel extends base_1.DOMWidgetModel {\n    defaults() {\n        return {\n            ...super.defaults(),\n            _model_name: RhinoModel.model_name,\n            _model_module: RhinoModel.model_module,\n            _model_module_version: RhinoModel.model_module_version,\n            _view_name: RhinoModel.view_name,\n            _view_module: RhinoModel.view_module,\n            _view_module_version: RhinoModel.view_module_version,\n            path: '',\n            height: 700,\n            width: 1000,\n            background_color: 'rgb(255, 255, 255)',\n            camera_pos: [15, 15, 15],\n            look_at: [0, 0, 0],\n            show_axes: true,\n            grid: null,\n            ambient_light: null,\n        };\n    }\n}\nexports.RhinoModel = RhinoModel;\nRhinoModel.serializers = {\n    ...base_1.DOMWidgetModel.serializers,\n};\nRhinoModel.model_name = 'RhinoModel';\nRhinoModel.model_module = version_1.MODULE_NAME;\nRhinoModel.model_module_version = version_1.MODULE_VERSION;\nRhinoModel.view_name = 'RhinoView'; // Set to null if no view\nRhinoModel.view_module = version_1.MODULE_NAME; // Set to null if no view\nRhinoModel.view_module_version = version_1.MODULE_VERSION;\nconst load3dmModel = (scene, filePath, options) => {\n    const { receiveShadow, castShadow } = options;\n    return new Promise((resolve, reject) => {\n        const loader = new _3DMLoader_1.Rhino3dmLoader();\n        loader.setLibraryPath('https://cdn.jsdelivr.net/npm/rhino3dm@0.15.0-beta/');\n        loader.load(filePath, (data) => {\n            const obj = data;\n            obj.position.y = 0;\n            obj.position.x = 0;\n            obj.position.z = 0;\n            obj.receiveShadow = receiveShadow;\n            obj.castShadow = castShadow;\n            scene.add(obj);\n            obj.traverse((child) => {\n                if (child.isObject3D) {\n                    child.castShadow = castShadow;\n                    child.receiveShadow = receiveShadow;\n                }\n            });\n            resolve(obj);\n        }, undefined, (error) => {\n            console.log(error);\n            reject(error);\n        });\n    });\n};\nconst resolveUrl = (url) => {\n    let currentUrl = window.location.href;\n    //Cut the notebook\n    if (currentUrl.endsWith('.ipynb')) {\n        const lastIndex = currentUrl.lastIndexOf('/');\n        currentUrl = currentUrl.slice(0, lastIndex);\n    }\n    currentUrl = currentUrl.replace('/lab', '');\n    //replace part of url if extension is used in nbclassic (legacy)\n    if (currentUrl.includes('/notebooks/')) {\n        currentUrl.replace('notebooks', 'tree');\n    }\n    //if path is absolute ignore current notebook position\n    if (url.startsWith('/')) {\n        return currentUrl.slice(0, currentUrl.indexOf('tree')) + 'tree' + url;\n    }\n    const folders = url.split('/');\n    for (const f of folders) {\n        if (f === '..') {\n            const lastIndex = currentUrl.lastIndexOf('/');\n            currentUrl = currentUrl.slice(0, lastIndex);\n        }\n        else {\n            currentUrl = currentUrl.concat('/' + f);\n        }\n    }\n    console.log(currentUrl);\n    return currentUrl;\n};\nclass RhinoView extends base_1.DOMWidgetView {\n    constructor() {\n        super(...arguments);\n        this.path = this.model.get('path');\n        this.width = this.model.get('width');\n        this.height = this.model.get('height');\n        this.background_color = this.model.get('background_color');\n        this.postion = this.model.get('camera_pos');\n        this.show_axes = this.model.get('show_axes');\n        this.grid = this.model.get('grid');\n        this.ambientLight = this.model.get('ambient_light');\n        this.look_at = this.model.get('look_at');\n    }\n    render() {\n        //add a loading element while loading\n        const loading = document.createElement('p');\n        loading.id = 'loading';\n        loading.textContent = 'Loading';\n        this.el.appendChild(loading);\n        //check parameters\n        try {\n            this.checkParams();\n        }\n        catch (e) {\n            this.showError(e.message);\n            return;\n        }\n        //create scene\n        this.scene = new THREE.Scene();\n        //set background color\n        try {\n            this.scene.background = new THREE.Color(this.background_color);\n        }\n        catch (error) {\n            this.showError(error);\n            return;\n        }\n        //create camera\n        const camera = new THREE.PerspectiveCamera(50, this.width / this.height, 1, 1000);\n        //position camera\n        camera.position.x = this.postion[0];\n        camera.position.y = this.postion[1];\n        camera.position.z = this.postion[2];\n        //set renderer window based on parameters\n        const renderer = new THREE.WebGLRenderer();\n        renderer.setSize(this.width, this.height);\n        this.addHelpersElements();\n        this.handleLighting();\n        const controls = new OrbitControls_1.OrbitControls(camera, renderer.domElement);\n        controls.target.set(this.look_at[0], this.look_at[1], this.look_at[2]);\n        //Stops opening the context menu on right click\n        const onContextMenu = (event) => {\n            event.stopPropagation();\n        };\n        this.el.addEventListener('contextmenu', onContextMenu);\n        const url = resolveUrl(this.path);\n        //Load the file\n        load3dmModel(this.scene, url, {\n            receiveShadow: true,\n            castShadow: true,\n        })\n            .then(() => {\n            this.el.removeChild(loading);\n            this.el.appendChild(renderer.domElement);\n            this.value_changed();\n            this.model.on('change:value', this.value_changed, this);\n            animate();\n        })\n            .catch(() => {\n            this.showError('Error: path \"' + url + '\" was not found');\n            return;\n        });\n        //add a camera coordinates tracker\n        const tracker = document.createElement('p');\n        this.el.onselectstart = () => {\n            return false;\n        };\n        renderer.domElement.classList.add('border');\n        this.el.appendChild(tracker);\n        let frame = 0;\n        const animate = () => {\n            requestAnimationFrame(animate);\n            controls.update();\n            if (frame === 50) {\n                tracker.textContent =\n                    'camera position: x: ' +\n                        camera.position.x.toString() +\n                        ' y: ' +\n                        camera.position.y.toString() +\n                        ' z: ' +\n                        camera.position.z.toString();\n                frame = 0;\n            }\n            frame++;\n            renderer.render(this.scene, camera);\n        };\n        animate();\n    }\n    handleLighting() {\n        if (this.ambientLight !== null) {\n            const ambientLight = new THREE.AmbientLight(this.ambientLight.color, this.ambientLight.intensity);\n            this.scene.add(ambientLight);\n        }\n        /*\n        const spotLight = new THREE.SpotLight(0xffffff, 2);\n        spotLight.position.set(0, 0, 100);\n        spotLight.castShadow = true;\n        spotLight.shadow.mapSize.width = 1024;\n        spotLight.shadow.mapSize.height = 1024;\n    \n        spotLight.shadow.camera.near = 500;\n        spotLight.shadow.camera.far = 4000;\n        spotLight.shadow.camera.fov = 30;\n        this.scene.add(spotLight);*/\n    }\n    addHelpersElements() {\n        if (this.show_axes) {\n            const axesHelper = new THREE.AxesHelper(200);\n            this.scene.add(axesHelper);\n        }\n        if (this.grid !== null) {\n            const gridHelper = new THREE.GridHelper(this.grid.size, this.grid.divisions);\n            this.scene.add(gridHelper);\n        }\n    }\n    showError(msg) {\n        const error = document.createElement('p');\n        error.textContent = msg;\n        this.el.appendChild(error);\n        const loading = document.getElementById('loading');\n        if (loading !== null) {\n            this.el.removeChild(loading);\n        }\n    }\n    value_changed() {\n        this.path = this.model.get('path');\n    }\n    checkParams() {\n        if (this.width < 100 || this.width > 3000) {\n            throw new Error('Error: width must be in range of 100-3000');\n        }\n        if (this.height < 100 || this.height > 3000) {\n            throw new Error('Error: height must be in range of 100-3000');\n        }\n        if (this.path === '') {\n            throw new Error('Error: path is required');\n        }\n        if (this.path.split('.').pop() !== '3dm') {\n            throw new Error('Error: path should lead to a 3dm file');\n        }\n        if (this.postion.length !== 3) {\n            throw new Error('Error: camera_pos should be a coordinate list eg: [15,15,15]');\n        }\n        if (this.look_at.length !== 3) {\n            throw new Error('Error: look_at should be a coordinate list eg: [15,15,15]');\n        }\n    }\n}\nexports.RhinoView = RhinoView;\n//# sourceMappingURL=widget.js.map","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".border {\\n  border-radius: 25px;\\n  border: 2px solid rgb(131, 131, 131);\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!./widget.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":[],"sourceRoot":""}